<template>
  <div class="information-inner information-change">
    <h1 class="information-title active">线索来源</h1>
    <div class="tab-list-content">
      <div class="box-body" v-show="showSearch">
        <el-form :model="queryParams" label-width="120px">
          <el-row>
            <el-col :span="8">
              <el-form-item label="线索编号：">
                <el-input
                  v-model="queryParams.clueNum"
                  placeholder="请输入线索编号"
                ></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="污染类型：">
                <el-select
                  v-model="queryParams.pollutionType"
                  placeholder="请选择污染类型"
                >
                  <el-option
                    v-for="item in pollutantArry"
                    :key="item.id"
                    :label="item.label"
                    :value="item.value"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="线索内容：">
                <el-input
                  v-model="queryParams.clueContent"
                  placeholder="请输入线索内容"
                ></el-input>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-form-item class="pull-right">
              <el-button type="primary" @click="onQuery">查询</el-button>
              <el-button type="primary" @click="onClear">清空</el-button>
            </el-form-item>
          </el-row>
        </el-form>
      </div>
      <el-row :gutter="10" class="mb8">
        <el-button size="small" @click="handleNewly" type="primary"
          >新增</el-button
        >
        <el-button size="small" @click="handleImport" type="primary"
          >导入</el-button
        >
        <right-toolbar
          :showSearch.sync="showSearch"
          @queryTable="getList"
        ></right-toolbar>
      </el-row>
      <el-table v-loading="loading" :data="List" border :stripe="true">
        <el-table-column width="50" label="序号">
          <template scope="scope">
            <span>{{
              (queryParams.pageNo - 1) * queryParams.pageSize + scope.$index + 1
            }}</span>
          </template></el-table-column
        >
        <el-table-column label="线索名称" min-width="200px">
          <template v-slot="scope">
            <span class="accounChunk" @click="handleSee(scope.row)">{{
              scope.row.clueName
            }}</span>
          </template>
        </el-table-column>
        <el-table-column
          prop="clueNum"
          label="线索编号"
          width="160px"
        ></el-table-column>
        <el-table-column
          prop="pollutionTypeName"
          label="污染类型"
          width="100px"
        ></el-table-column>
        <el-table-column
          label="线索来源地"
          :show-overflow-tooltip="true"
          min-width="280px"
        >
          <template v-slot="scope">
            {{ scope.row.city }}{{ scope.row.county }}{{ scope.row.town
            }}{{ scope.row.address }}
          </template>
        </el-table-column>
        <el-table-column
          prop="clueContent"
          label="线索内容"
          min-width="200px"
        ></el-table-column>
        <el-table-column
          prop="pollutionTypeName"
          label="重点关注"
          width="100px"
        ></el-table-column>
        <el-table-column label="操作" width="240">
          <template v-slot="scope">
            <el-button size="mini" type="success" @click="handleTail(scope.row)"
              >线索跟踪</el-button
            >
            <el-button size="mini" type="primary" @click="handleEdit(scope.row)"
              >修改</el-button
            >
            <el-button
              size="mini"
              type="danger"
              @click="handleDelete(scope.row)"
              >删除</el-button
            >
          </template>
        </el-table-column>
      </el-table>
      <pagination
        v-show="total > 0"
        :total="total"
        :pageNo.sync="queryParams.pageNo"
        :limit.sync="queryParams.pageSize"
        @pagination="getList"
      />
    </div>
    <el-dialog
      :title="dialogTitle"
      :visible.sync="open"
      :before-close="handleDialogClose"
      width="80%"
      append-to-body
    >
      <el-form
        ref="dialogForm"
        :model="dialogParams"
        :rules="dialogRules"
        label-width="80px"
        class="dialogForm twoLayoutForm mt22"
      >
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索名称：" prop="clueName">
              <el-input
                placeholder="请输入线索名称"
                v-model="dialogParams.clueName"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索编号：" prop="clueNum">
              <el-input
                placeholder="请输入线索编号"
                v-model="dialogParams.clueNum"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="线索来源：" prop="clueSource">
              <el-input
                placeholder="请输入线索来源"
                v-model="dialogParams.clueSource"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="污染类型：" prop="pollutionType">
              <el-select
                v-model="dialogParams.pollutionType"
                placeholder="请选择污染类型"
              >
                <el-option
                  v-for="item in pollutantArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.value"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="问题属性：" prop="problemType">
              <el-input
                placeholder="请输入问题属性"
                v-model="dialogParams.problemType"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item
              label="线索所在地："
              class="meet-address"
              prop="address"
            >
              <el-select
                v-model="dialogParams.cityCode"
                filterable
                placeholder="请选择市"
                @change="handleCityChange"
              >
                <el-option
                  v-for="item in areaArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-select
                v-model="dialogParams.countyCode"
                filterable
                placeholder="请选择区县"
                @change="handleCountyChange"
              >
                <el-option
                  v-for="item in countyArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-select
                v-model="dialogParams.townCode"
                filterable
                placeholder="请选择镇"
              >
                <el-option
                  v-for="item in townArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-input
                v-model="dialogParams.address"
                placeholder="详细地址"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索内容：" prop="clueContent">
              <el-input
                placeholder="请输入线索内容"
                type="textarea"
                v-model="dialogParams.clueContent"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索相关资料：" prop="attachmentId">
              <upload
                ref="uploadFile"
                accept=".doc,.docx,.pdf"
                :limit="5"
                :fileId="dialogParams.attachmentId"
                fromKey="attachmentId"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="重点关注：" prop="weatherFocus">
              <el-select
                v-model="dialogParams.weatherFocus"
                placeholder="请选择重点关注"
              >
                <el-option label="是" value="1"></el-option>
                <el-option label="否" value="0"></el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>
    <el-dialog
      title="查看"
      :visible.sync="lookOpen"
      :before-close="handleDialogLookClose"
      width="80%"
      append-to-body
    >
      <div class="manage-info">
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">线索名称：</span>
            <span class="info-item-content">{{ manageInfo.clueName }}</span>
          </div>
        </div>
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">线索编号：</span>
            <span class="info-item-content">{{ manageInfo.clueNum }}</span>
          </div>
          <div class="info-item-quare">
            <span class="info-item-title">线索来源：</span>
            <span class="info-item-content">{{ manageInfo.clueSource }}</span>
          </div>
        </div>
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">污染类型：</span>
            <span class="info-item-content">{{
              manageInfo.pollutionTypeName
            }}</span>
          </div>
          <div class="info-item-quare">
            <span class="info-item-title">问题属性：</span>
            <span class="info-item-content">{{ manageInfo.problemType }}</span>
          </div>
        </div>
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">线索所在地：</span>
            <span class="info-item-content">
              {{ manageInfo.city }}{{ manageInfo.county }}{{ manageInfo.town }}
              {{ manageInfo.address }}
            </span>
          </div>
        </div>
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">线索内容：</span>
            <span class="info-item-content">{{ manageInfo.clueContent }}</span>
          </div>
        </div>
        <div class="info-item">
          <div class="info-item-quare">
            <span class="info-item-title">来信电子件：</span>
            <span
              class="info-item-content accounChunk"
              @click="handleDownLoadDoc(manageInfo.attachementPath)"
              >{{ manageInfo.attachementName }}</span
            >
          </div>
          <div class="info-item-quare">
            <span class="info-item-title">重点关注：</span>
            <span class="info-item-content">{{ manageInfo.weatherFocus }}</span>
          </div>
        </div>
      </div>
    </el-dialog>
    <import-dialog
      :importOpen="importOpen"
      :importUrl="importUrl"
      :importDownUrl="importDownUrl"
      :importPattern="importPattern"
      title="资料清单导入"
      @changeOpen="changeImportOpen"
      @update="getList"
    ></import-dialog>
  </div>
</template>

<script>
import { threadList, threadSave, threadDelete } from "@/api/InspectorClues";
import { threadSee } from "@/api/burg/prepare";
import { dictListType } from "@/api/styem/dict/type";
import { getdownLoadZip } from "@/utils/styem";
import { mapGetters } from "vuex";
import { getFileInfo } from "@/api/file";
import { areaTreeNew } from "@/api/styem/dept";
import importDialog from "@/components/importDialog";
export default {
  components: {
    importDialog
  },
  data() {
    return {
      showSearch: true,
      pollutantArry: [],
      queryParams: {
        pageNo: 1,
        pageSize: 10,
        clueNum: undefined,
        pollutionType: undefined,
        clueContent: undefined
      },
      List: [],
      total: 0,
      loading: true,
      open: false,
      dialogParams: {
        id: undefined,
        clueName: undefined,
        clueNum: undefined,
        clueSource: undefined,
        pollutionType: undefined,
        problemType: undefined,
        cityCode: undefined,
        countyCode: undefined,
        townCode: undefined,
        address: undefined,
        clueContent: undefined,
        attachmentId: undefined,
        weatherFocus: undefined
      },
      manageInfo: {
        clueName: undefined,
        clueNum: undefined,
        clueSource: undefined,
        pollutionTypeName: undefined,
        problemType: undefined,
        cityCode: undefined,
        countyCode: undefined,
        townCode: undefined,
        address: undefined,
        clueContent: undefined,
        attachementPath: undefined,
        attachementName: undefined,
        weatherFocus:undefined
      },
      dialogRules: {
        clueName: [{ required: true, message: "请输入线索名称" }],
        clueNum: [{ required: true, message: "请输入线索编号" }],
        clueSource: [{ required: true, message: "请输入线索来源" }],
        pollutionType: [{ required: true, message: "请选择污染类型" }],
        problemType: [{ required: true, message: "请输入问题属性" }],
        address: [{ required: true, message: "请输入地址" }],
        clueContent: [{ required: true, message: "请输入线索内容" }],
        attachmentId: [{ required: true, message: "请上传线索相关资料" }],
        weatherFocus: [{ required: true, message: "请选择重点关注" }]
      },
      dialogTitle: "新增",
      countyArry: [],
      townArry: [],
      lookOpen: false,
      importOpen: false,
      importPattern:false,
      importUrl: "/center/clue/main/tClueMain/importData",
      importDownUrl: "/template/线索导入模板.xlsx",
    };
  },
  created() {
    this.getList();
    this.getDictPollutant();
  },
  computed: {
    ...mapGetters(["inspectInfo", "areaArry"])
  },
  methods: {
    async getList() {
      this.loading = true;
      const reponse = await threadList(this.queryParams);
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
    },
    async getDictPollutant() {
      const reponse = await dictListType({ type: "clue_pollution_type" });
      this.pollutantArry = reponse.data;
    },
    async handleCityChange(code) {
      this.countyArry = [];
      this.dialogParams.countyCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    async handleCityChangeb(code) {
      this.countyArry = [];
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    async handleCountyChange(code) {
      this.townArry = [];
      this.dialogParams.townCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.townArry = reponse.data;
    },
    async handleCountyChangeb(code) {
      this.townArry = [];
      const reponse = await areaTreeNew({ parentId: code });
      this.townArry = reponse.data;
    },
    onQuery() {
      this.getList();
      this.queryParams.pageNo = 1;
    },
    onClear() {
      this.queryParams.clueNum = undefined;
      this.queryParams.pollutionType = undefined;
      this.queryParams.clueContent = undefined;
    },
    handleNewly() {
      this.dialogTitle = "新增";
      this.open = true;
      this.dialogParams.cityCode = undefined;
      this.dialogParams.countyCode = undefined;
      this.dialogParams.townCode = undefined;
      this.handleformClear("dialogForm");
    },
    handleImport() {
      this.importOpen = true;
    },
    changeImportOpen() {
      this.importOpen = false;
    },
    dailogSubmit() {
      this.$refs.dialogForm.validate(async valid => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });
          const reponse = await threadSave(this.dialogParams);
          loading.close();
          this.open = false;

          this.getList();
        }
      });
    },
    async handleEdit({ id }) {
      this.dialogTitle = "修改";
      this.open = true;
      this.getDialogInfo(id);
    },
    async getDialogInfo(id) {
      const reponse = await threadSee({ id });
      const subject = reponse.data;
      this.dialogParams.id = subject.id;
      this.dialogParams.clueName = subject.clueName;
      this.dialogParams.clueNum = subject.clueNum;
      this.dialogParams.clueSource = subject.clueSource;
      this.dialogParams.pollutionType = subject.pollutionType;
      this.dialogParams.problemType = subject.problemType;
      this.dialogParams.cityCode = subject.cityCode;
      this.dialogParams.countyCode = subject.countyCode;
      this.dialogParams.townCode = subject.townCode;
      this.dialogParams.address = subject.address;
      this.dialogParams.clueContent = subject.clueContent;
      this.dialogParams.attachmentId = subject.attachmentId;
      this.dialogParams.weatherFocus = subject.weatherFocus;
      this.handleCityChangeb(subject.cityCode);
      this.handleCountyChangeb(subject.countyCode);
      this.$nextTick(() => {
        this.$refs.uploadFile && this.$refs.uploadFile.getFileMessageInfo();
      });
    },
    handleSee({ id }) {
      this.lookOpen = true;
      this.getDetailInfo(id);
    },
    async getDetailInfo(id) {
      const reponse = await threadSee({ id });
      const subject = reponse.data;
      this.manageInfo.clueName = subject.clueName;
      this.manageInfo.clueNum = subject.clueNum;
      this.manageInfo.clueSource = subject.clueSource;
      this.manageInfo.pollutionTypeName = subject.pollutionTypeName;
      this.manageInfo.problemType = subject.problemType;
      this.manageInfo.city = subject.city;
      this.manageInfo.county = subject.county;
      this.manageInfo.town = subject.town;
      this.manageInfo.address = subject.address;
      this.manageInfo.clueContent = subject.clueContent;
      this.manageInfo.weatherFocus = subject.weatherFocus;
      this.getSingleMessagInfo(subject.attachmentId);
    },
    async getSingleMessagInfo(fileId) {
      const reponse = await getFileInfo({ ids: fileId });
      if (reponse.data && reponse.data.length) {
        const subject = reponse.data;
        if (reponse.data && reponse.data.length) {
          const subject = reponse.data;
          this.manageInfo.attachementName = subject[0].file_name;
          this.manageInfo.attachementPath = subject[0].save_path;
        }
      }
    },
    handleDialogLookClose() {
      this.lookOpen = false;
      this.dialogParamsClear();
    },
    dialogParamsClear() {
      this.manageInfo.clueName = undefined;
      this.manageInfo.clueNum = undefined;
      this.manageInfo.clueSource = undefined;
      this.manageInfo.pollutionTypeName = undefined;
      this.manageInfo.problemType = undefined;
      this.manageInfo.city = undefined;
      this.manageInfo.county = undefined;
      this.manageInfo.town = undefined;
      this.manageInfo.address = undefined;
      this.manageInfo.clueContent = undefined;
      this.manageInfo.attachementPath = undefined;
      this.manageInfo.attachementName = undefined;
    },
    handleTail(data) {},
    handleDelete(data) {
      this.$confirm("是否要删除", "确认信息", {
        distinguishCancelAndClose: true,
        confirmButtonText: "删除",
        cancelButtonText: "取消"
      }).then(async () => {
        const { id } = data;
        const reponse = await threadDelete({ id });
        this.getList();
      });
    },
    handleDialogClose() {
      this.open = false;
      this.$refs.uploadFile && this.$refs.uploadFile.handleClear();
    },
    handleformClear(formName) {
      this.resetFieldsTap(formName);
      this.dialogParams.id = undefined;
    },
    setUrlPath(file) {
      this.dialogParams[file.fromKey] = file.fileId;
    },
    deleteServeFile(file) {
      this.dialogParams[file.fromKey] = undefined;
    },
    handleDownLoadDoc(path) {
      getdownLoadZip(path);
    }
  }
};
</script>
<style lang="scss" scoped>
.twoLayoutForm {
  .meet-address {
    .el-form-item__content {
      .el-select {
        width: 20%;
      }
      .el-input {
        width: 30%;
      }
    }
  }
}
.manage-info {
  .info-item {
    .info-item-title {
      width: 112px;
    }
  }
}
</style>