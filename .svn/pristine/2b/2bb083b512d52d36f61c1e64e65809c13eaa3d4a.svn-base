<template>
  <div class="zh-search">
    <div class="search-wrap">
      <el-input
        placeholder="请输入内容"
        v-model="keyword"
        class="input-with-select"
      >
        <el-button
          slot="append"
          icon="el-icon-search"
          @click="goSearch"
        ></el-button>
      </el-input>
    </div>
    <div class="filter">
      <el-checkbox-group
        v-model="checkList"
        @change="handleCheckboxGroupChange"
      >
        <el-checkbox
          :label="item.label"
          v-for="item in filterType"
          v-bind:key="item.id"
        ></el-checkbox>
      </el-checkbox-group>
    </div>
    <div class="result">
      <div class="top">
        <el-radio-group v-model="resultType" style="margin-bottom: 30px">
          <el-radio-button
            v-for="(value, key) in resultTypeData"
            v-bind:key="key"
            :label="key"
            >{{ key }}（{{ value[0].count }}）</el-radio-button
          >
        </el-radio-group>
      </div>
      <div class="ul">
        <div
          class="li"
          v-for="item in curList"
          v-bind:key="item.id"
          @click="jump(item.id)"
        >
          <div class="title" v-html="item.name"></div>
          <div class="content" v-html="item.content"></div>
        </div>
      </div>
      <pagination
        v-show="total > 0"
        :total="total"
        :pageNo.sync="pageNo"
        :limit.sync="pageSize"
        @pagination="goSearch"
      />
    </div>
  </div>
</template>

<script>
import { getAllSearchData } from "@/api/support/search";
import { dictListType } from "@/api/styem/dict/type";
export default {
  data() {
    return {
      keyword: "",
      checkList: [],
      filterType: [],
      types: "",
      searchWord: "",
      pageNo: 1,
      pageSize: 10,
      tabList: [],
      resultType: "资料附件",
      resultTypeData: {},
      curList: [],
      total: 0,
    };
  },
  computed: {},
  watch: {
    resultType: function (newV) {
      this.resultType = newV;
      this.curList = this.resultTypeData[newV][0].list;
      this.total = this.resultTypeData[newV][0].count;
      this.pageNo = 1;      
      this.goSearch();
    },
  },
  created() {
    this.getFilterType();
    this.goSearch();
  },
  methods: {
    jump: function (id) {
      if(this.resultType == '整改方案'){
        this.$router.push({ path: "/dispatch/task" }); 
      }
    },
    handleCheckboxGroupChange: function (e) {
      let arr = [];
      e.forEach((item) => {
        this.filterType.forEach((i) => {
          if (item == i.label) {
            arr.push(i.value);
          }
        });
      });
      this.types = arr.join(",");
      this.goSearch();
    },
    getFilterType: function () {
      dictListType({
        type: "es_env",
      })
        .then((res) => {
          this.filterType = res.data;
        })
        .catch();
    },
    goSearch: function () {
      getAllSearchData({
        pageNo: this.pageNo,
        pageSize: this.pageSize,
        types: this.types,
        searchWord: this.keyword,
      }).then((res) => {
        let arr = Object.keys(res.data);
        if (arr.indexOf(this.resultType) < 0) {
          this.resultType = arr[0];
        }
        this.resultTypeData = res.data;
        this.curList = this.resultTypeData[this.resultType][0].list;
        this.total = this.resultTypeData[this.resultType][0].count;
      });
    },
  },
};
</script>

<style lang="scss" scoped>
.zh-search {
  width: 100%;
  .search-wrap {
    width: 300px;
    margin: 0 auto;
    padding: 30px 0 10px;
  }
  .filter {
    display: flex;
    justify-content: center;
    margin-bottom: 30px;
    .el-checkbox-group {
      display: inline-block;
    }
  }
  .li {
    padding: 20px;
    border-bottom: 1px solid #9e9e9e2b;
    color: #3e3c3c;

    .title {
      font-weight: bold;
      padding-bottom: 10px;
      cursor: pointer;
    }
    .content {
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 3;
      cursor: pointer;

      font-size: 14px;
    }
  }
}
</style>


