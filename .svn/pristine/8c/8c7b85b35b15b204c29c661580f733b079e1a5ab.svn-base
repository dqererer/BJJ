<template>
  <div class="information-inner information-change">
    <h1 class="information-title active">下沉日志</h1>
    <div class="tab-list-content">
      <national-info
        :teamId.sync="queryParams.teamId"
        :areaCode.sync="queryParams.inspectAreaCode"
        @nameChange="getList"
      ></national-info>
      <div class="box-body" v-show="showSearch">
        <el-form :model="queryParams" label-width="120px">
          <el-row>
            <el-col :span="8">
              <el-form-item label="下沉旗县：">
                <el-select
                  v-model="queryParams.areaCode"
                  placeholder="请选择下沉旗县"
                >
                  <el-option
                    v-for="item in sinkCountyArry"
                    :key="item.id"
                    :label="item.label"
                    :value="item.id"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-form-item class="pull-right">
              <el-button type="primary" @click="onQuery">查询</el-button>
              <el-button type="primary" @click="onClear">清空</el-button>
            </el-form-item>
          </el-row>
        </el-form>
      </div>
      <el-row :gutter="10" class="mb8">
        <el-button size="small" @click="handleNewly" type="primary"
          >新增</el-button
        >
        <right-toolbar
          :showSearch.sync="showSearch"
          @queryTable="getListb"
        ></right-toolbar>
      </el-row>
      <el-table v-loading="loading" :data="List" border :stripe="true">
        <el-table-column width="50" label="序号">
          <template scope="scope">
            <span>{{
              (queryParams.pageNo - 1) * queryParams.pageSize + scope.$index + 1
            }}</span>
          </template></el-table-column
        >
        <el-table-column
          prop="teamName"
          label="下沉名称"
          min-width="200px"
          class="column-left"
        ></el-table-column>
        <el-table-column
          prop="areaName"
          label="日志时间"
          width="120px"
        ></el-table-column>
        <el-table-column
          prop="sinkPerson"
          label="下沉人员"
          width="180px"
        ></el-table-column>
        <el-table-column
          prop="sinkArea"
          label="下沉旗县"
          width="200px"
        ></el-table-column>
        <el-table-column label="操作" width="160">
          <template slot-scope="scope">
            <el-button size="mini" type="primary" @click="handleEdit(scope.row)"
              >修改</el-button
            >
            <el-button
              size="mini"
              type="danger"
              @click="handleDelete(scope.row)"
              >删除</el-button
            >
          </template>
        </el-table-column>
      </el-table>
      <pagination
        v-show="total > 0"
        :total="total"
        :pageNo.sync="queryParams.pageNo"
        :limit.sync="queryParams.pageSize"
        @pagination="getListb"
      />
    </div>
    <el-dialog
      title="新增下沉日志"
      :visible.sync="open"
      :before-close="handleDialogClose"
      width="80%"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">下沉基本信息</h1>
      </div>
      <el-form
        ref="dialogForm"
        :model="dialogParams"
        :rules="dialogRules"
        label-width="80px"
        class="dialogForm twoLayoutForm"
      >
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="下沉组名称：" prop="teamName">
              <el-select
                v-model="dialogParams.teamName"
                @change="handleSinkNameChange"
                placeholder="请选择下沉组名称"
              >
                <el-option
                  v-for="item in sinkAllArry"
                  :key="item.id"
                  :label="item.name"
                  :value="item.id"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="日志时间：" prop="sinkDate">
              <el-date-picker
                v-model="dialogParams.sinkDate"
                format="yyyy-MM-d"
                value-format="yyyy-MM-dd"
                type="date"
                placeholder="请选择日志时间"
              />
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="下沉人员：" prop="sinkPersonId">
              <el-select
                v-model="dialogParams.sinkPersonId"
                placeholder="请选择下沉人员"
                multiple
              >
                <el-option
                  v-for="item in personArry"
                  :key="item.id"
                  :label="item.name"
                  :value="item.id"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="examineInfo">
          <h1 class="examineInfo-title">下沉日志信息</h1>
          <el-button size="mini" @click="handleSinkAdd" type="primary"
            >新增</el-button
          >
        </div>
        <div
          class="log-item"
          v-for="(sink, index) in dialogParams.addressDTOList"
          :key="index"
        >
          <div class="log-item-left">
            <el-row :gutter="24" style="margin-top:12px">
              <el-col :span="24">
                <el-form-item
                  label="下沉地点："
                  class="meet-address"
                  prop="meetAddress"
                >
                  <el-select
                    v-model="sink.countyCode"
                    filterable
                    placeholder="请选择旗县"
                    @change="handleSinkCityChange"
                  >
                    <el-option
                      v-for="item in sinkCountyArry"
                      :key="item.id"
                      :label="item.label"
                      :value="item.id"
                    >
                    </el-option>
                  </el-select>
                  <el-select
                    v-model="sink.townCode"
                    filterable
                    placeholder="请选择乡镇"
                  >
                    <el-option
                      v-for="item in sinkTownArry"
                      :key="item.id"
                      :label="item.label"
                      :value="item.id"
                    >
                    </el-option>
                  </el-select>
                  <el-input
                    v-model="sink.meetAddress"
                    placeholder="详细地址"
                  ></el-input>
                </el-form-item>
              </el-col>
            </el-row>
            <div class="manage-info">
              <div class="info-item">
                <span class="info-item-title">线索信息：</span>
                <span class="info-item-content">
                  <el-button
                    size="mini"
                    type="primary"
                    @click="handleAlready(index)"
                    >选择已有线索</el-button
                  >
                  <el-button
                    size="mini"
                    type="success"
                    @click="handleClew(index)"
                    >新增线索</el-button
                  >
                </span>
              </div>
              <div class="info-item">
                <span class="info-item-title">已有线索信息：</span>
                <div class="info-item-content">
                  <ul class="info-item-list">
                    <li
                      class="info-item-item"
                      v-for="(item, index) in sink.oldTrackDTOList"
                      :key="item.id"
                    >
                      {{ index + 1 }}、{{ item.clueName
                      }}<span
                        class="clue-close"
                        @click="handleClueClose(index, 'already')"
                        >X</span
                      >
                    </li>
                  </ul>
                </div>
              </div>
              <div class="info-item" style="border-bottom:0px;">
                <span class="info-item-title">新增线索信息：</span>
                <div class="info-item-content">
                  <ul class="info-item-list">
                    <li
                      class="info-item-item"
                      v-for="(item, index) in sink.newTrackDTOList"
                      :key="item.id"
                    >
                      {{ index + 1 }}、{{ item.clueName
                      }}<span
                        class="clue-close"
                        @click="handleClueClose(index, 'clew')"
                        >X</span
                      >
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
          <div class="log-item-right">
            x
          </div>
        </div>
        <div class="dialogFormFooter" style="margin-top:22px">
          <el-button type="primary" @click="dailogSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>
    <el-dialog
      title="已有线索"
      :visible.sync="alreadyOpen"
      :before-close="handleDialogAlreadyClose"
      width="80%"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">线索信息</h1>
      </div>
      <el-form
        ref="dialogAlreadyForm"
        :model="dialogAlreadyParams"
        :rules="dialogAlreadyRules"
        label-width="80px"
        class="dialogForm twoLayoutForm mt22"
      >
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索名称：" prop="clueName">
              <el-select
                v-model="dialogAlreadyParams.clueName"
                filterable
                @change="handleClueNameChange"
                placeholder="请选择线索名称"
              >
                <el-option
                  v-for="item in nameList"
                  :key="item.id"
                  :label="item.clueName"
                  :value="item.id"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索编号：">
              <el-input
                readonly
                v-model="dialogAlreadyParams.clueNum"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="线索来源：">
              <el-input
                readonly
                v-model="dialogAlreadyParams.clueSource"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="污染类型：">
              <el-input
                readonly
                v-model="dialogAlreadyParams.pollutionTypeName"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="问题属性：">
              <el-input
                readonly
                v-model="dialogAlreadyParams.problemType"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item
              label="线索所在地："
              class="meet-addressc"
              prop="title"
            >
              <el-input readonly v-model="dialogAlreadyParams.city"></el-input>
              <el-input
                readonly
                v-model="dialogAlreadyParams.county"
              ></el-input>
              <el-input readonly v-model="dialogAlreadyParams.town"></el-input>
              <el-input
                readonly
                class="el-inputb"
                v-model="dialogAlreadyParams.address"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索内容：">
              <el-input
                readonly
                type="textarea"
                v-model="dialogAlreadyParams.clueContent"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索相关资料：">
              <span
                class="check-text accounChunk"
                @click="handleDownLoadDoc(dialogAlreadyParams.attachementPath)"
                >{{ dialogAlreadyParams.attachementName }}</span
              >
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogAlreadySubmit"
            >保存</el-button
          >
          <el-button type="primary" @click="handleDialogAlreadyClose"
            >关闭</el-button
          >
        </div>
      </el-form>
    </el-dialog>
    <el-dialog
      title="新增线索"
      :visible.sync="clewOpen"
      :before-close="handleDialogClewClose"
      width="80%"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">线索信息</h1>
      </div>
      <el-form
        ref="dialogClewForm"
        :model="dialogClewParams"
        :rules="dialogClewRules"
        label-width="80px"
        class="dialogForm twoLayoutForm mt22"
      >
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索名称：" prop="clueName">
              <el-input
                v-model="dialogClewParams.clueName"
                placeholder="请输入线索名称"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索编号：" prop="clueNum">
              <el-input
                v-model="dialogClewParams.clueNum"
                placeholder="请输入线索编号"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="线索来源：" prop="clueSource">
              <el-input
                v-model="dialogClewParams.clueSource"
                placeholder="请输入线索来源"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="污染类型：" prop="pollutionType">
              <el-select
                v-model="dialogClewParams.pollutionType"
                placeholder="请选择污染类型"
              >
                <el-option
                  v-for="item in pollutantArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.value"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="问题属性：" prop="problemType">
              <el-input
                v-model="dialogClewParams.problemType"
                placeholder="请输入问题属性"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item
              label="线索所在地："
              class="meet-addressb"
              prop="address"
            >
              <el-select
                v-model="dialogClewParams.cityCode"
                placeholder="请选择市"
                @change="handleCityChange"
              >
                <el-option
                  v-for="item in areaArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-select
                v-model="dialogClewParams.countyCode"
                placeholder="请选择县"
                @change="handleCountyChange"
              >
                <el-option
                  v-for="item in countyArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-select
                v-model="dialogClewParams.townCode"
                placeholder="请选择镇"
              >
                <el-option
                  v-for="item in townArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-input
                v-model="dialogClewParams.address"
                placeholder="请输入详细地址"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索内容：" prop="clueContent">
              <el-input
                type="textarea"
                placeholder="请输入线索内容"
                v-model="dialogClewParams.clueContent"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索相关资料：" prop="attachmentId">
              <upload
                ref="uploadFile"
                :limit="1"
                accept=".doc,.docx,.pdf"
                :fileId="dialogClewParams.attachmentId"
                fromKey="attachmentId"
                params="dialogClewParams"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogClewSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClewClose"
            >关闭</el-button
          >
        </div>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
import {
  logList,
  logSee,
  logDelete,
  logSave,
  sinkAll,
  severalRelationSave
} from "@/api/burg/garrison";
import {
  threadRelationPull,
  threadSee,
  threadRelationSave
} from "@/api/burg/prepare";
import { inspectorPersonInfo } from "@/api/support/inspectorate";
import { dictListType } from "@/api/styem/dict/type";
import examineInfo from "@/components/examineInfo";
import nationalInfo from "@/components/nationalInfo";
import { getSingleInfo } from "@/utils/styem";
import { getFileInfo } from "@/api/file";
import { mapGetters } from "vuex";
import { areaTreeNew } from "@/api/styem/dept";
export default {
  components: {
    examineInfo,
    nationalInfo
  },
  data() {
    return {
      showSearch: true,
      queryParams: {
        pageNo: 1,
        pageSize: 10,
        teamId: undefined,
        inspectAreaCode: undefined
      },
      List: [],
      total: 0,
      loading: true,
      open: false,
      dialogParams: {
        id: undefined,
        teamId: undefined,
        teamName: undefined,
        sinkDate: undefined,
        sinkPersonId: [],
        addressDTOList: [
          {
            cityCode: undefined,
            countyCode: undefined,
            address: undefined,
            oldTrackDTOList: [],
            newTrackDTOList: []
          }
        ]
      },
      dialogRules: {
        teamName: [{ required: true, message: "请输入下沉组名称" }],
        sinkDate: [{ required: true, message: "请选择日志时间" }],
        sinkPersonId: [{ required: true, message: "请选择下沉人员" }],
      },
      townArry: [],
      personArry: [],
      sinkAllArry: [],
      alreadyOpen: false, //已有线索
      dialogAlreadyParams: {
        id: undefined,
        clueName: undefined,
        clueNum: undefined,
        clueSource: undefined,
        pollutionTypeName: undefined,
        problemType: undefined,
        city: undefined,
        county: undefined,
        town: undefined,
        address: undefined,
        clueContent: undefined,
        attachmentId: undefined,
        attachementPath: undefined,
        attachementName: undefined
      },
      dialogAlreadyRules: {
        clueName: [{ required: true, message: "请输入线索名称" }]
      },
      clewOpen: false, //新增线索
      dialogClewParams: {
        clueName: undefined,
        clueNum: undefined,
        clueSource: undefined,
        pollutionTypeName: undefined,
        problemType: undefined,
        cityCode: undefined,
        countyCode: undefined,
        townCode: undefined,
        address: undefined,
        clueContent: undefined,
        attachmentId: undefined,
        inspectTeamId: undefined,
        relationId: undefined,
        TCommonLinkAddress: "TInspectTalk"
      },
      dialogClewRules: {
        clueName: [{ required: true, message: "请输入线索名称" }],
        clueNum: [{ required: true, message: "请输入线索编号" }],
        clueSource: [{ required: true, message: "请输入线索来源" }],
        pollutionType: [{ required: true, message: "请选择污染类型" }],
        problemType: [{ required: true, message: "请输入问题属性" }],
        address: [{ required: true, message: "请输入详细地址" }],
        clueContent: [{ required: true, message: "请输入线索内容" }],
        attachmentId: [{ required: true, message: "请上传线索相关资料" }]
      },
      alreadyList: [],
      clewList: [],
      nameParams: {
        pageNo: 1,
        pageSize: 20,
        clueName: undefined,
        inspectTeamId: undefined
      },
      sinkCountyArry: [],
      sinkTownArry: [],
      nameList: [],
      pollutantArry: [],
      countyArry: [],
      relationSaveInfo: {
        id: undefined,
        inspectTeamId: undefined,
        relationId: undefined,
        TCommonLinkAddress: "TInspectTalk"
      },
      openIndex: undefined
    };
  },
  created() {
    this.getList();
    this.getDictPollutant();
  },
  computed: {
    ...mapGetters(["areaArry", "inspectInfo"])
  },
  methods: {
    async getList() {
      this.loading = true;
      const reponse = await logList(this.queryParams);
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
      this.getPerson();
      this.getSinkAll();
      this.getNameList();
      this.getCountyArry();
    },
    async getListb() {
      this.loading = true;
      const reponse = await logList(this.queryParams);
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
    },
    async getPerson() {
      const teamId = this.queryParams.teamId;
      const personReponse = await inspectorPersonInfo({ teamId });
      this.personArry = personReponse.data;
    },
    async getSinkAll() {
      const parentId = this.queryParams.teamId;
      const reponse = await sinkAll({ parentId, level: 6 });
      this.sinkAllArry = reponse.data;
    },
    async getNameList() {
      this.nameParams.inspectTeamId = this.queryParams.teamId;
      const reponse = await threadRelationPull(this.nameParams);
      this.nameList = reponse.data.list;
    },
    async getDictPollutant() {
      const reponse = await dictListType({ type: "clue_pollution_type" });
      this.pollutantArry = reponse.data;
    },
    async getCountyArry() {
      const reponse = await areaTreeNew({
        parentId: this.queryParams.inspectAreaCode
      });
      this.sinkCountyArry = reponse.data;
    },
    async handleSinkNameChange(temId){
      console.log(temId);
      this.dialogParams.temId = temId
    },
    async handleSinkCityChange(code) {
      this.sinkTownArry = [];
      this.dialogParams.townCode = undefined;
      const reponse = await areaTreeNew({
        parentId: code
      });
      this.sinkTownArry = reponse.data;
    },
    async handleCityChange(code) {
      this.countyArry = [];
      this.dialogClewParams.countyCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    async handleCountyChange(code) {
      this.townArry = [];
      this.dialogClewParams.townCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.townArry = reponse.data;
    },
    onQuery() {
      this.getListb();
      this.queryParams.pageNo = 1;
    },
    onClear() {
      this.queryParams.areaCode = undefined;
    },
    handleNewly() {
      this.open = true;
    },
    handleEdit(data) {
    },
    dailogSubmit() {
      this.$refs.dialogForm.validate(async valid => {
        if (valid) {
          // const loading = this.$loading({
          //   lock: true,
          //   text: "正在保存提交，请稍等...",
          //   spinner: "el-icon-loading",
          //   background: "rgba(0, 0, 0, 0.1)"
          // });
          this.dialogParams.sinkPersonId = this.dialogParams.sinkPersonId.join(",");
          console.log(this.dialogParams);
          return;
          const reponse = await schemeSave(this.dialogParams);
          loading.close();
          this.handleDialogClose();
          this.getListb();
        }
      });
    },
    handleDialogClose() {
      this.open = false;
      this.handleformClear("dialogForm");
    },
    handleAlready(index) {
      this.openIndex = index;
      this.alreadyOpen = true;
      this.handleformClear("dialogAlreadyForm");
      this.relationSaveInfo.inspectTeamId = this.inspectInfo.id;
    },
    async handleClueNameChange(id) {
      this.relationSaveInfo.id = id;
      const reponse = await threadSee({ id });
      const subject = reponse.data;
      this.dialogAlreadyParams.id = subject.id;
      this.dialogAlreadyParams.clueNum = subject.clueNum;
      this.dialogAlreadyParams.clueSource = subject.clueSource;
      this.dialogAlreadyParams.pollutionTypeName = subject.pollutionTypeName;
      this.dialogAlreadyParams.problemType = subject.problemType;
      this.dialogAlreadyParams.city = subject.city;
      this.dialogAlreadyParams.county = subject.county;
      this.dialogAlreadyParams.town = subject.town;
      this.dialogAlreadyParams.address = subject.address;
      this.dialogAlreadyParams.clueContent = subject.clueContent;
      this.dialogAlreadyParams.attachementName = undefined;
      this.dialogAlreadyParams.attachementPath = undefined;
      subject.attachmentId && this.getSingleMessagInfo(subject.attachmentId);
    },
    async getSingleMessagInfo(fileId) {
      const reponse = await getFileInfo({ ids: fileId });
      if (reponse.data && reponse.data.length) {
        const subject = reponse.data;
        if (reponse.data && reponse.data.length) {
          const subject = reponse.data;
          this.dialogAlreadyParams.attachementName = subject[0].file_name;
          this.dialogAlreadyParams.attachementPath = subject[0].save_path;
        }
      }
    },
    dailogAlreadySubmit() {
      this.$refs.dialogAlreadyForm.validate(async valid => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });

          const reponse = await threadRelationSave(this.relationSaveInfo);
          this.dialogParams.addressDTOList[this.openIndex].oldTrackDTOList.push(
            {
              clueName: reponse.data.clueName,
              clueId: reponse.data.id,//线索
              teamId: this.dialogParams.temId,
              id: undefined
            }
          );
          loading.close();
          this.handleDialogAlreadyClose();
        }
      });
    },
    handleDialogAlreadyClose() {
      this.alreadyOpen = false;
      this.dialogParamsClear();
    },
    handleClew(index) {
      this.clewOpen = true;
      this.openIndex = index;
      this.handleformClear("dialogClewForm");
      this.relationSaveInfo.inspectTeamId = this.queryParams.teamId;
    },
    dailogClewSubmit() {
      this.$refs.dialogClewForm.validate(async valid => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });
          const reponse = await severalRelationSave(this.dialogClewParams);
          this.dialogParams.addressDTOList[this.openIndex].newTrackDTOList.push(
            {
              clueName: reponse.data.clueName,
              clueId: reponse.data.id,
              teamId: this.dialogParams.temId,
              id: undefined
            }
          );
          loading.close();
          this.handleDialogClewClose();
          this.$refs.uploadFile.handleClear();
        }
      });
    },
    handleSinkAdd() {
      this.dialogParams.addressDTOList.push({
        cityCode: undefined,
        countyCode: undefined,
        address: undefined,
        oldTrackDTOList: [],
        newTrackDTOList: []
      });
    },
    handleDialogClewClose() {
      this.clewOpen = false;
      this.dialogClewParams.cityCode = undefined;
      this.dialogClewParams.countyCode = undefined;
      this.dialogClewParams.townCode = undefined;
    },
    dialogParamsClear() {
      this.dialogAlreadyParams.id = undefined;
      this.dialogAlreadyParams.clueName = undefined;
      this.dialogAlreadyParams.clueNum = undefined;
      this.dialogAlreadyParams.clueSource = undefined;
      this.dialogAlreadyParams.pollutionTypeName = undefined;
      this.dialogAlreadyParams.problemType = undefined;
      this.dialogAlreadyParams.city = undefined;
      this.dialogAlreadyParams.county = undefined;
      this.dialogAlreadyParams.town = undefined;
      this.dialogAlreadyParams.address = undefined;
      this.dialogAlreadyParams.clueContent = undefined;
      this.dialogAlreadyParams.attachmentId = undefined;
      this.dialogAlreadyParams.attachementName = undefined;
      this.dialogAlreadyParams.attachementPath = undefined;
    },
    handleDelete(data) {
      this.$confirm("是否要删除", "确认信息", {
        distinguishCancelAndClose: true,
        confirmButtonText: "删除",
        cancelButtonText: "取消"
      }).then(async () => {
        const { id } = data;
        const reponse = await schemeDelete({ id });
        this.getListb();
      });
    },
    handleformClear(formName) {
      this.resetFieldsTap(formName);
      this.dialogParams.id = undefined;
    },
    setUrlPath(file) {
      this.dialogClewParams[file.fromKey] = file.fileId;
    },
    deleteServeFile(file) {
      this.dialogClewParams[file.fromKey] = undefined;
    }
  }
};
</script>
<style lang="scss" scoped>
.twoLayoutForm {
  .meet-address {
    .el-form-item__content {
      .el-select {
        width: 20%;
      }
      .el-input {
        width: 34%;
      }
    }
  }
  .meet-addressb {
    .el-form-item__content {
      .el-select {
        width: 20%;
      }
      .el-input {
        width: 34%;
      }
    }
  }
  .meet-addressc {
    .el-form-item__content {
      .el-input {
        width: 20%;
      }
      .el-inputb {
        width: 34%;
      }
    }
  }
}
.manage-info {
  .info-item {
    .info-item-title {
      width: 120px;
      text-align: right;
      padding-right: 10px;
    }
  }
}
.info-item-list {
  margin: 0px;
  padding: 0px;
  .info-item-item {
    list-style: none;
  }
}
.clue-close {
  color: red;
  margin-left: 20px;
  cursor: pointer;
  width: 20px;
  height: 20px;
  display: inline-block;
  text-align: center;
  line-height: 20px;
}
.examineInfo {
  position: relative;
  .el-button {
    position: absolute;
    right: 10px;
    top: 10px;
  }
}
.log-item {
  display: flex;
  .log-item-left {
    flex: 1;
    border: 1px solid #d7d7d7;
    border-top: 0px;
    &:first-child {
      border-top: 1px solid #d7d7d7;
    }
  }
  .log-item-right {
  }
}
</style>