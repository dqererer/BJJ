<template>
  <div class="regional">
    <ComTitle :text="text" />
    <div class="card fitler">
      <div class="row">
        <CheckListGroup
          :completeArr="resourceList"
          type="roundIds"
          title="对接批次"
          @handleCheckChange="handleCheckChange"
        />
      </div>
      <div class="row">
        <CheckListGroup
          :completeArr="executionList"
          type="tipStates"
          title="完成情况"
          @handleCheckChange="handleCheckChange"
        />
      </div>
    </div>
    <div class="card content">
      <div class="data-info">
        <div id="bar"></div>
        <div class="table">
          <el-table :data="tableData" border style="width: 100%">
            <el-table-column prop="status" label="" width="180"></el-table-column>
            <el-table-column
              :prop="index.toString()"
              :label="item"
              width="180"
              v-for="(item, index) in tableHeader"
              v-bind:key="index"
            >
            </el-table-column>
          </el-table>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import ComTitle from "../title";
import CheckListGroup from "../checkListGroup.vue";

import {
  getDCAreaBarData,
  getDCAreaTableData,
  getRoundList,
  getTipStateDict,
} from "@/api/support/analyse";
import * as echarts from "echarts";
require("echarts/theme/macarons"); //引入主题
const BLZ = "办理中";
const YBJ = "已办结";
const JR = "接入";
const WBL = "未办理";
const barDataInit = function () {
  return {
    xData: [],
    yData1: [],
    yData2: [],
    yData3: [],
    yData4: [],
  };
};
export default {
  name: "RegionalDistribution",
  data() {
    return {
      text: "按地区统计",
      resourceList: [],
      executionList: [],
      barCharts: null,
      barData: barDataInit(),
      queryParams: {
        roundIds: "",
        tipStates: "",
        inspectType: "C",
      },
      tableData: [],
      tableHeader: [],
    };
  },
  components: {
    ComTitle,
    CheckListGroup,
  },
  created() {
    this.init();
  },
  methods: {
    init: function () {
      this.getDCAreaBarData();
      this.getDCAreaTableData();
      getTipStateDict({
        inspectType: "C",
      }).then((res) => {
        let arr = res.data.map((item) => {
          return {
            value: item.value,
            label: item.name,
          };
        });
        this.executionList = arr;
      });
      getRoundList().then((res) => {
        let arr = res.data.map((item) => {
          return {
            value: item.roundId,
            label: item.roundName,
          };
        });
        this.resourceList = arr;
      });
    },

    handleDialogClose: function () {
      this.open = false;
    },
    handleCheckChange: function (type, checkList) {
      this.queryParams[type] = checkList;
      this.getDCAreaBarData();
      this.getDCAreaTableData();
    },
    drawBar: function () {
      this.barCharts = echarts.init(document.getElementById("bar"), "macarons");
      this.barCharts.clear();
      this.barCharts.setOption({
        tooltip: {
          trigger: "axis",
          axisPointer: {
            type: "shadow",
          },
        },
        xAxis: {
          type: "category",
          data: this.barData.xData,
        },
        yAxis: {
          type: "value",
        },
                legend: {
          orient: "horizontal",
          left: "center",
          top: "bottom",
        },
        series: [
          {
            name: JR,
            type: "bar",
            barGap: 0,
            emphasis: {
              focus: "series",
            },
            data: this.barData.yData1,
          },
          {
            name: WBL,
            type: "bar",
            emphasis: {
              focus: "series",
            },
            data: this.barData.yData2,
          },
          {
            name: BLZ,
            type: "bar",
            emphasis: {
              focus: "series",
            },
            data: this.barData.yData3,
          },
          {
            name: YBJ,
            type: "bar",
            emphasis: {
              focus: "series",
            },
            data: this.barData.yData4,
          },
        ],
      });
    },
    getDCAreaBarData: function () {
      getDCAreaBarData(this.queryParams).then((res) => {
        this.barData = barDataInit();
        res.data && res.data.data &&
          res.data.data.forEach((item) => {
            this.barData.xData.push(item.cityName);
            this.barData.yData1.push(item[JR]);
            this.barData.yData2.push(item[WBL]);
            this.barData.yData3.push(item[BLZ]);
            this.barData.yData4.push(item[YBJ]);
          });
        this.$nextTick(() => {
          this.drawBar();
        });
      });
    },
    getDCAreaTableData: function () {
      getDCAreaTableData(this.queryParams).then((res) => {
        let arr = [];
        for (let i in res.data.data) {
          let obj = Object.assign({ status: i, },{...res.data.data[i]});
          arr.push(obj); 
        }
        this.tableData = arr;
        this.tableHeader = res.data.tableHeader;
      });
    },
  },
};
</script>

<style lang="scss" scoped>
.regional {
  height: 100%;
  padding: 20px;
  .card {
    border: 1px solid #ebeef5;
    background-color: #fff;
    overflow: hidden;
    color: #303133;
    .row {
      padding-bottom: 20px;
    }
  }
  .fitler {
    margin-bottom: 10px;
    padding: 20px;
  }
  .content {
    #bar {
      width: 100%;
      height: 400px;
    }
    .table {
      padding: 20px;
    }
  }
}
</style>


