<template>
  <div>
    <el-dialog
      title="添加勘查笔录"
      :visible.sync="spotOpen"
      :before-close="handleDialogClose"
      width="80%"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">现场勘察笔录</h1>
      </div>
      <el-form
        ref="dialogForm"
        :model="dialogParams"
        :rules="dialogRules"
        label-width="80px"
        class="dialogForm twoLayoutForm"
      >
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="时间：" prop="startTime">
              <el-date-picker
                v-model="dialogParams.startTime"
                format="yyyy-MM-d"
                value-format="yyyy-MM-dd"
                type="date"
                placeholder="请选择时间"
              />
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item
              label="地点："
              class="meet-address"
              prop="actualAddress"
            >
              <el-select
                v-model="dialogParams.actualCityCode"
                filterable
                placeholder="请选择市"
                @change="handleCityChange"
              >
                <el-option
                  v-for="item in areaArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-select
                v-model="dialogParams.actualCountyCode"
                filterable
                placeholder="请选择县"
              >
                <el-option
                  v-for="item in countyArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                >
                </el-option>
              </el-select>
              <el-input
                v-model="dialogParams.actualAddress"
                placeholder="详细地址"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="勘察人员：" prop="actualSpeakerIds">
              <el-select
                v-model="dialogParams.actualSpeakerIds"
                placeholder="请选择勘察人员"
                multiple
              >
                <el-option
                  v-for="item in personArry"
                  :key="item.id"
                  :label="item.name"
                  :value="item.id"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="记录人员：" prop="actualRecordId">
              <el-select
                v-model="dialogParams.actualRecordId"
                placeholder="请选择记录人员"
              >
                <el-option
                  v-for="item in personArry"
                  :key="item.id"
                  :label="item.name"
                  :value="item.id"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="被勘察人：" prop="actualInterviewee">
              <el-input
                v-model="dialogParams.actualInterviewee"
                placeholder="请输入被勘察人"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="现场负责人：" prop="siteLeader">
              <el-input
                v-model="dialogParams.siteLeader"
                placeholder="请输入现场负责人"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="电话：" prop="actualIntervieweePhone">
              <el-input
                v-model="dialogParams.actualIntervieweePhone"
                placeholder="请输入电话"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="身份证号码：" prop="actualIntervieweeIdcard">
              <el-input
                v-model="dialogParams.actualIntervieweeIdcard"
                placeholder="请输入身份证号码"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="年龄：" prop="actualIntervieweeAge">
              <el-input
                v-model="dialogParams.actualIntervieweeAge"
                placeholder="请输入年龄"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="工作单位：" prop="actualIntervieweeUnit">
              <el-input
                v-model="dialogParams.actualIntervieweeUnit"
                placeholder="请输入工作单位"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="职务：" prop="actualIntervieweePost">
              <el-input
                v-model="dialogParams.actualIntervieweePost"
                placeholder="请输入职务"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="邮编：" prop="actualIntervieweePostcode">
              <el-input
                v-model="dialogParams.actualIntervieweePostcode"
                placeholder="请输入邮编"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="其他参与人员：" prop="otherHander">
              <el-input
                v-model="dialogParams.otherHander"
                placeholder="请输入其他参与人员"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="现场情况：" prop="siteCondition">
              <el-input
                type="textarea"
                v-model="dialogParams.siteCondition"
                placeholder="请输入现场情况"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="电子件：" prop="attachmentId">
              <upload
                ref="uploadFile"
                accept=".doc,.docx,.pdf"
                :limit="5"
                :fileId="dialogParams.attachmentId"
                fromKey="attachmentId"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>
  </div>
</template>

<script>
import examineInfo from "@/components/examineInfo";
import { issueSpotSave } from "@/api/burg/garrison";
import { severalPersonList } from "@/api/burg/garrison";
import { areaTreeNew } from "@/api/styem/dept";
import { mapGetters } from "vuex";
export default {
  props: {
    spotOpen: {
      type: Boolean
    }
  },
  components: {
    examineInfo
  },
  data() {
    return {
      dialogParams: {
        type: 4,
        id: undefined,
        startTime: undefined,
        actualCityCode: undefined,
        actualCountyCode: undefined,
        actualAddress: undefined,
        actualSpeakerIds: [],
        actualRecordId: undefined,
        actualInterviewee: undefined,
        siteLeader: undefined,
        actualIntervieweePhone: undefined,
        actualIntervieweeIdcard: undefined,
        actualIntervieweeAge: undefined,
        actualIntervieweeUnit: undefined,
        actualIntervieweePost: undefined,
        actualIntervieweePostcode: undefined,
        otherHander: undefined,
        siteCondition: undefined,
        attachmentId: undefined
      },
      dialogRules: {
        startTime: [{ required: true, message: "请选择时间" }],
        actualAddress: [{ required: true, message: "请输入详细地址" }],
        actualSpeakerIds: [{ required: true, message: "请选择勘察人员" }],
        actualRecordId: [{ required: true, message: "请选择记录人员" }],
        actualInterviewee: [{ required: true, message: "请输入被询问人" }],
        siteLeader: [{ required: true, message: "请输入现场负责人" }],
        actualIntervieweePhone: [{ required: true, message: "请输入电话" }],
        actualIntervieweeIdcard: [
          { required: true, message: "请输入身份证号码" }
        ],
        actualIntervieweeAge: [{ required: true, message: "请输入年龄" }],
        actualIntervieweeUnit: [{ required: true, message: "请输入工作单位" }],
        actualIntervieweePost: [{ required: true, message: "请输入职务" }],
        actualIntervieweePostcode: [{ required: true, message: "请输入邮编" }],
        otherHander: [{ required: true, message: "请输入其他参与人员" }],
        siteCondition: [{ required: true, message: "请输入现场情况" }],
        attachmentId: [{ required: true, message: "请上传电子件" }]
      },
      countyArry: [],
      personArry: [],
      spotArry: []
    };
  },
  created() {
    this.getPersonList();
  },
  computed: {
    ...mapGetters(["areaArry", "inspectInfo"])
  },
  methods: {
    async getPersonList(code) {
      const reponse = await severalPersonList();
      this.personArry = reponse.data;
    },
    async handleCityChange(code) {
      this.countyArry = [];
      this.dialogParams.actualCountyCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    dailogSubmit() {
      this.$refs.dialogForm.validate(async valid => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });
          this.dialogParams.actualSpeakerIds = this.dialogParams.actualSpeakerIds.join(
            ","
          );
          const reponse = await issueSpotSave(this.dialogParams);
          const subject = reponse.data;
          this.spotArry.push({
            id: subject.id,
            actualCityName: subject.actualCityName + "勘察笔录"
          });
          loading.close();
          this.handleDialogClose();
        }
      });
    },
    handleDialogClose() {
      this.handleformClear("dialogForm");
      this.$emit("handleSpotClose", this.spotArry);
      this.$refs.uploadFile.handleClear && this.$refs.uploadFile.handleClear();
      this.spotArry = [];
      this.dialogParams.actualCityCode = undefined;
      this.dialogParams.actualCountyCode = undefined;
    },
    handleformClear(formName) {
      this.resetFieldsTap(formName);
      this.dialogParams.id = undefined;
    },
    setUrlPath(file) {
      this.dialogParams[file.fromKey] = file.fileId;
    },
    deleteServeFile(file) {
      this.dialogParams[file.fromKey] = undefined;
    }
  }
};
</script>

<style lang="scss" scoped>
.twoLayoutForm {
  .meet-address {
    .el-form-item__content {
      .el-select {
        width: 33%;
      }
      .el-input {
        width: 34%;
      }
    }
  }
}
</style>