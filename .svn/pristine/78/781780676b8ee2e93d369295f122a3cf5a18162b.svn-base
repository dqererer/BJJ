<template>
  <div>
    <div class="title">问题聚焦信息</div>
    <div class="clue-info">
      <div class="clue-item">
        <div class="clue-item-quare">
          <span class="clue-item-label">
            <i class="clue-import">*</i>督察信息：
          </span>
          <span class="clue-item-input">{{teamInfo}}</span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare">
          <span class="clue-item-label" style="margin:0">
            <i class="clue-import">*</i>下沉督察组：
          </span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>下沉组名称：
          </span>
          <span class="clue-item-input">{{manageInfo.name}}</span>
        </div>
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>日志时间：
          </span>
          <span class="clue-item-input">{{manageInfo.time}}</span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>下沉旗县：
          </span>
          <span class="clue-item-input">{{manageInfo.areaName}}</span>
        </div>
      </div>

      <div class="clue-item">
        <div class="clue-item-quare">
          <span class="clue-item-label">
            <i class="clue-import">*</i>问题信息
          </span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>问题名称：
          </span>
          <span class="clue-item-input">{{manageInfo.problemDescript}}</span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>问题描述：
          </span>
          <span class="clue-item-input">{{manageInfo.problemContent}}</span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>相关证书：
          </span>
          <span class="clue-item-file"></span>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>询问笔录：
          </span>
          <div class="clue-item-file">
            <span
              class="accounChunk"
              @click="handleInspectClick(item.id)"
              v-for="(item,index) in inspectArry"
              :key="index"
            >{{item.theme}}</span>
          </div>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>勘察笔录：
          </span>
          <div class="clue-item-file">
            <span
              class="accounChunk"
              @click="handleSpotClick(item.id)"
              v-for="(item,index) in spotArry"
              :key="index"
            >{{item.actualCityName}}</span>
          </div>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>多媒体记录：
          </span>
          <div class="clue-item-file">
            <span
              class="accounChunk"
              @click="handleMediaClick(item.id)"
              v-for="(item,index) in mediaArry"
              :key="index"
            >{{item.mediaExplain}}</span>
          </div>
        </div>
      </div>
      <div class="clue-item">
        <div class="clue-item-quare clue-item-inspect">
          <span class="clue-item-label">
            <i class="clue-import">*</i>其他相关线索：
          </span>
          <div class="clue-item-file">
            <span
              class="accounChunk"
              v-for="(item,index) in clueTrackDTOList"
              :key="index"
            >{{item.clueName}}</span>
          </div>
        </div>
      </div>
    </div>
    <inspect-index-preview
      ref="inspectIndexRef"
      :inspectName="inspectName"
      @handleInspectIndexPreviewClose="handleInspectIndexPreviewClose"
      :previewIndexOpen="previewIndexOpen"
      v-if="previewIndexOpen"
      :previewIndexOpenId="previewIndexOpenId"
    ></inspect-index-preview>
    <spot-index-preview
      ref="spotIndexRef"
      v-if="spotIndexOpen"
      :inspectName="inspectName"
      @handleSpotIndexPreviewClose="handleSpotIndexPreviewClose"
      :spotIndexOpen="spotIndexOpen"
      :spotIndexOpenId="spotIndexOpenId"
    ></spot-index-preview>
    <media-index-preview
      ref="mediaIndexRef"
      :mediaIndexOpen="mediaIndexOpen"
      :mediaIndexId="mediaIndexId"
      @handleMediaIndexClose="handleMediaIndexClose"
    ></media-index-preview>
  </div>
</template>

<script>
import { issueSee } from "@/api/burg/garrison";
import { threadTeamInfo, threadByAddress } from "@/api/InspectorClues";
import inspectIndexPreview from "@/views/burg/garrison/sink/sinkIssue/inspectIndexPreview";
import spotIndexPreview from "@/views/burg/garrison/sink/sinkIssue/spotIndexPreview";
import mediaIndexPreview from "@/views/burg/garrison/sink/sinkIssue/mediaIndexPreview";
export default {
  components: {
    inspectIndexPreview,
    spotIndexPreview,
    mediaIndexPreview
  },
  props: {
    tailId: {
      type: String
    },
    teamId: {
      type: String
    }
  },
  data() {
    return {
      teamInfo: undefined,
      manageInfo: {
        name: undefined,
        sinkDate: undefined,
        sinkPerson: undefined,
        problemDescript: undefined,
        problemContent: undefined
      },
      clueTrackDTOList:[],
      inspectArry: [],
      spotArry: [],
      mediaArry: [],
      previewIndexOpenId:undefined,
      spotIndexOpenId:undefined,
      mediaIndexId:undefined,
      previewIndexOpen:false,
      spotIndexOpen:false,
      mediaIndexOpen:false,
      inspectName:undefined
    };
  },
  methods: {
    handleInspectClick(id) {
      this.previewIndexOpenId = id;
      this.previewIndexOpen = true;
      this.$nextTick(() => {
        this.$refs.inspectIndexRef.handleEdit();
      });
    },
    handleSpotClick(id) {
      this.spotIndexOpenId = id;
      this.spotIndexOpen = true;
      this.$nextTick(() => {
        this.$refs.spotIndexRef.handleEdit();
      });
    },
    handleMediaClick(id) {
      this.mediaIndexId = id;
      this.mediaIndexOpen = true;
      this.$nextTick(() => {
        this.$refs.mediaIndexRef.handleEdit();
      });
    },
    handleInspectIndexPreviewClose() {
      this.previewIndexOpen = false;
    },
    handleSpotIndexPreviewClose() {
      this.spotIndexOpen = false;
    },
    handleMediaIndexClose() {
      this.mediaIndexOpen = false;
    },
    async getTeamInfo() {
      const reponse = await threadTeamInfo({ id: this.teamId });
      const subject = reponse.data;
      this.teamInfo =
        subject.superviseName +
        subject.roundName +
        subject.batchName +
        subject.name;
      this.inspectName = subject.name;
    },
    async getInfo() {
      const reponse = await issueSee({ id: this.tailId });
      const subject = reponse.data;
      const xcTeamInfo = subject.xcTeamInfo;
      this.manageInfo.name = xcTeamInfo.name;
      this.manageInfo.time = xcTeamInfo.xcStartDate?xcTeamInfo.xcStartDate + xcTeamInfo.xcEndDate:undefined;
      this.manageInfo.areaName = xcTeamInfo.areaName;
      const problem = subject.problem;
      this.manageInfo.problemDescript = problem.problemDescript;
      this.manageInfo.problemContent = problem.problemContent;
      if (subject.mainList) {
        const clewArry = [];
        const mainList = subject.mainList;
        for (const item in mainList) {
          const subject = mainList[item];
          clewArry.push({
            clueName: subject.clueName,
            clueId: subject.id
          });
        }
        this.clueTrackDTOList = clewArry;
      }else{
        this.clueTrackDTOList = []
      }
      if (subject.dcxwList) {
        const inspectArry = [];
        const dcxwList = subject.dcxwList;
        for (const item in dcxwList) {
          const subject = dcxwList[item];
          inspectArry.push({
            theme: subject.theme + "询问笔录",
            id: subject.id
          });
        }
        this.inspectArry = inspectArry;
      }else{
        this.inspectArry = [];
      }
      if (subject.kcblList) {
        const spotArry = [];
        const kcblList = subject.kcblList;
        for (const item in kcblList) {
          const subject = kcblList[item];
          spotArry.push({
            actualCityName: subject.actualCityName + "勘察笔录",
            id: subject.id
          });
        }
        this.spotArry = spotArry;
      }else{
        this.spotArry = [];
      }
      if (subject.mediaList) {
        const mediaArry = [];
        const mediaList = subject.mediaList;
        for (const item in mediaList) {
          const subject = mediaList[item];
          mediaArry.push({
            mediaExplain: subject.mediaExplain + "多媒体证据",
            id: subject.id
          });
        }
        this.mediaArry = mediaArry;
      }else{
        this.mediaArry = [];
      }
    }
  }
};
</script>

<style lang="scss" scoped>
.title {
  height: 20px;
  border-left: 3px solid #2196f3;
  padding-left: 10px;
  font-size: 14px;
  font-weight: 500;
}
.clue-info {
  width: 100%;
  .clue-item {
    display: flex;
    margin-top: 16px;
    &.two-clue-item {
      .clue-item-quare {
        &:first-child {
          margin-right: 16px;
        }
      }
    }
    .clue-item-quare {
      flex: 1;
      display: flex;
      flex-direction: column;
      &.clue-item-inspect {
        flex-direction: row;
        align-items: center;

        .clue-item-label {
          width: 110px;
          text-align: right;
          margin-bottom: 0;
        }
      }
      .clue-item-file {
        padding-left: 10px;
        display: block;
      }
      .clue-item-label {
        font-size: 14px;
        color: #333;
        margin-bottom: 10px;
        display: block;
        .clue-import {
          display: inline-block;
          margin-right: 4px;
          color: #f56c6c;
        }
      }
      .clue-item-input {
        width: 100%;
        min-height: 32px;
        line-height: 32px;
        font-size: 14px;
        border: 1px solid #eee;
        border-radius: 4px;
        padding-left: 10px;
        box-sizing: border-box;
        overflow: hidden;
        flex: 1;
      }
      .clue-item-select {
        display: flex;
        .clue-item-select-city {
          width: 11%;
          height: 32px;
          line-height: 32px;
          font-size: 14px;
          border: 1px solid #eee;
          margin-right: 16px;
          border-radius: 4px;
          padding-left: 10px;
          overflow: hidden;
        }
        .clue-item-select-address {
          flex: 1;
          height: 32px;
          line-height: 32px;
          font-size: 14px;
          border: 1px solid #eee;
          border-radius: 4px;
          padding-left: 10px;
          overflow: hidden;
        }
      }
    }
  }
}
.clue-question {
  display: flex;
  flex-direction: column;
  .question-item {
    margin-bottom: 10px;
    display: flex;
    flex-direction: column;
    .question-top {
      display: flex;
      align-items: center;
      .question-label {
        width: 100px;
        font-size: 14px;
        color: #333;
        text-align: right;
        font-weight: normal;
      }
    }
    .question-bottom {
      margin-top: 10px;
      display: flex;
      align-items: center;
      .question-label {
        width: 100px;
        font-size: 14px;
        color: #333;
        text-align: right;
        font-weight: normal;
      }
    }
  }
}
.accounChunk{
  display: block;
  margin-top: 4px;
}
</style>