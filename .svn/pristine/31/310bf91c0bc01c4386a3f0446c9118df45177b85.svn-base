<template>
  <div>
    <national-info
      :teamId.sync="queryParams.inspectId"
      @nameChange="getList"
    ></national-info>
    <div class="box-body" v-show="showSearch">
      <el-form :model="queryParams" label-width="120px">
        <el-row>
          <el-col :span="8">
            <el-form-item label="资料名称：">
              <el-input
                v-model="queryParams.infoName"
                placeholder="请输入资料名称"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="8">
            <el-form-item label="资料类型：">
              <el-select
                v-model="queryParams.documentType"
                placeholder="请选择资料类型"
              >
                <el-option
                  v-for="item in documentArry"
                  :key="item.id"
                  :value="item.value"
                  :label="item.label"
                ></el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-form-item class="pull-right">
            <el-button type="primary" @click="onQuery">查询</el-button>
            <el-button type="primary" @click="onClear">清空</el-button>
          </el-form-item>
        </el-row>
      </el-form>
    </div>
    <el-row :gutter="10" class="mb8">
      <el-button size="small" @click="handleNewly" type="primary"
        >新增</el-button
      >
      <el-button size="small" @click="handleImport" type="primary"
        >导入</el-button
      >
      <right-toolbar
        :showSearch.sync="showSearch"
        @queryTable="getList"
      ></right-toolbar>
    </el-row>
    <el-table v-loading="loading" :data="List" border :stripe="true">
      <el-table-column width="50" label="序号" fixed>
        <template scope="scope">
          <span>{{
            (queryParams.pageNo - 1) * queryParams.pageSize + scope.$index + 1
          }}</span>
        </template></el-table-column
      >
      <el-table-column
        prop="infoListName"
        fixed
        label="资料清单名称"
        :show-overflow-tooltip="true"
        min-width="280px"
        class="column-left"
      ></el-table-column>
      <el-table-column
        prop="infoName"
        label="资料名称"
        :show-overflow-tooltip="true"
        width="280px"
      ></el-table-column>
      <el-table-column
        prop="accessRequire"
        label="提供要求"
        width="160px"
      ></el-table-column>
      <el-table-column
        prop="lastTime"
        label="最迟提供时间"
        width="110px"
      ></el-table-column>
      <el-table-column
        prop="whetherProvideName"
        label="是否提供"
        width="80px"
      ></el-table-column>
      <el-table-column
        prop="number"
        label="资料编号"
        width="120px"
      ></el-table-column>
      <el-table-column
        prop="fileNumber"
        label="资料文号"
        width="120px"
      ></el-table-column>
      <el-table-column
        :show-overflow-tooltip="true"
        prop="fromUnit"
        label="提供单位"
        width="160px"
      ></el-table-column>
      <el-table-column
        prop="provideTime"
        label="提供时间"
        width="160px"
      ></el-table-column>
      <el-table-column
        prop="infoNum"
        label="资料份数"
        width="80px"
      ></el-table-column>
      <el-table-column label="操作" width="200">
        <template slot-scope="scope">
          <el-button
            size="mini"
            type="primary"
            @click="handleRegister(scope.row)"
            >资料登记</el-button
          >
          <el-button size="mini" type="danger" @click="handleDelete(scope.row)"
            >删除</el-button
          >
        </template>
      </el-table-column>
    </el-table>
    <pagination
      v-show="total > 0"
      :total="total"
      :pageNo.sync="queryParams.pageNo"
      :limit.sync="queryParams.pageSize"
      @pagination="getList"
    />
    <el-dialog
      title="新增资料清单"
      :visible.sync="open"
      width="80%"
      :before-close="handleDialogClose"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">资料清单信息</h1>
      </div>
      <el-form
        ref="dialogForm"
        :model="dialogParams"
        :rules="dialogRules"
        label-width="80px"
        class="dialogForm twoLayoutForm"
      >
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="资料清单名称：" prop="infoListName">
              <el-input
                v-model="dialogParams.infoListName"
                placeholder="请输入资料清单名称"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="最迟提供时间：" prop="lastTime">
              <el-date-picker
                v-model="dialogParams.lastTime"
                format="yyyy-MM-d"
                value-format="yyyy-MM-dd"
                type="date"
                placeholder="请输入最迟提供时间"
              />
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="提供要求：" prop="accessRequire">
              <el-input
                v-model="dialogParams.accessRequire"
                placeholder="请输入提供要求"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="资料名称：" prop="reportDate">
              <div
                class="report-box"
                v-for="(item, index) in dialogParams.infoNameList"
                :key="index"
              >
                <el-input
                  v-model="dialogParams.infoNameList[index].infoName"
                  placeholder="请输入资料名称"
                ></el-input>

                <svg-icon
                  @click="handleDeleteClick(index)"
                  iconClass="remove"
                  class="el-input__icon"
                  style="height: 32px;width: 32px;"
                ></svg-icon>
              </div>
            </el-form-item>
          </el-col>
        </el-row>
        <el-button type="primary" size="small" @click="handleChildClick"
          >新增</el-button
        >
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>
    <el-dialog
      title="资料登记"
      :visible.sync="register.open"
      :before-close="handleRegisterClose"
      width="80%"
      append-to-body
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">资料清单信息</h1>
        <div class="manage-info">
          <div class="info-item">
            <div class="info-item-quare">
              <span class="info-item-title">资料清单名称：</span>
              <span class="info-item-content">{{
                basicInfo.infoListName
              }}</span>
            </div>
          </div>
          <div class="info-item">
            <div class="info-item-quare">
              <span class="info-item-title">最迟提供时间：</span>
              <span class="info-item-content">{{ basicInfo.lastTime }}</span>
            </div>
            <div class="info-item-quare">
              <span class="info-item-title">提供要求：</span>
              <span class="info-item-content">{{
                basicInfo.accessRequire
              }}</span>
            </div>
          </div>
        </div>
      </div>
      <div class="examineInfo">
        <h1 class="examineInfo-title">资料提供信息</h1>
      </div>
      <el-form
        ref="dialogRegisterForm"
        :model="registerParams"
        :rules="registerRules"
        label-width="80px"
        class="dialogForm twoLayoutForm"
      >
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="资料名称：">
              <span class="infoName">{{ basicInfo.infoName }}</span>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="资料目录：" prop="businessType">
              <treeselect
                v-model="registerParams.businessType"
                :options="menuList"
                :disableBranchNodes="false"
                :normalizer="normalizer"
                noChildrenText="无"
                placeholder="请选择资料目录"
              />
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="资料编号：" prop="number">
              <el-input
                v-model="registerParams.number"
                placeholder="请输入资料编号"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="资料文号：" prop="fileNumber">
              <el-input
                v-model="registerParams.fileNumber"
                placeholder="请输入资料文号"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="提供单位：" prop="fromUnit">
              <el-input
                v-model="registerParams.fromUnit"
                placeholder="请输入提供单位"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="提供人：" prop="fromPerson">
              <el-input
                v-model="registerParams.fromPerson"
                placeholder="请输入提供人"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="份数：" prop="infoNum">
              <el-input
                v-model.number="registerParams.infoNum"
                placeholder="请输入份数"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="资料类型：" prop="documentType">
              <el-select
                v-model="registerParams.documentType"
                filterable
                placeholder="请选择资料类型"
              >
                <el-option
                  v-for="item in documentArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.value"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="资料电子件：" prop="attachmentId">
              <upload
                ref="uploadFile"
                :limit="registerParams.infoNum"
                :fileId="registerParams.attachmentId"
                fromKey="attachmentId"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogRegisterSubmit"
            >保存</el-button
          >
          <el-button type="primary" @click="handleRegisterClose"
            >关闭</el-button
          >
        </div>
      </el-form>
    </el-dialog>
    <import-dialog
      :importOpen="importOpen"
      :importUrl="importUrl"
      :importDownUrl="importDownUrl"
      :importPattern="importPattern"
      title="资料清单导入"
      @changeOpen="changeImportOpen"
      @update="getList"
    ></import-dialog>
  </div>
</template>

<script>
import {
  consultList,
  consultAddSave,
  consultSave,
  consultSee,
  consultDelete
} from "@/api/national/consult";
import { catalogList } from "@/api/support/material";
import { dictListType } from "@/api/styem/dict/type";
import examineInfo from "@/components/examineInfo";
import importDialog from "@/components/importDialog";
import { getFileInfo } from "@/api/file";
import nationalInfo from "@/components/nationalInfo";
export default {
  components: {
    examineInfo,
    importDialog,
    nationalInfo
  },
  data() {
    return {
      showSearch: true,
      documentArry: [],
      queryParams: {
        pageNo: 1,
        pageSize: 10,
        infoName: undefined,
        documentType: undefined,
        inspectId: undefined
      },
      List: [],
      total: 0,
      loading: true,
      open: false,
      dialogParams: {
        inspectId: undefined,
        infoListName: undefined,
        lastTime: undefined,
        accessRequire: undefined,
        infoNameList: [{ infoName: "" }]
      },
      dialogRules: {
        infoListName: [{ required: true, message: "请输入资料名称" }],
        lastTime: [{ required: true, message: "请输入最迟提供时间" }],
        accessRequire: [{ required: true, message: "请输入提供要求" }]
      },
      register: {
        open: false
      },
      menuList: [],
      normalizer(node) {
        return {
          label: node.name
        };
      },
      registerParams: {
        id: undefined,
        businessType: undefined,
        number: undefined,
        fileNumber: undefined,
        fromUnit: undefined,
        fromPerson: undefined,
        infoNum: 1,
        documentType: undefined,
        attachmentId: [],
        materialId: " "
      },
      basicInfo: {
        infoListName: undefined,
        lastTime: undefined,
        accessRequire: undefined,
        infoName: undefined
      },
      registerRules: {
        businessType: [{ required: true, message: "请选择资料分类" }],
        number: [{ required: true, message: "请输入资料编号" }],
        fileNumber: [{ required: true, message: "请输入资料文号" }],
        fromUnit: [{ required: true, message: "请输入提供单位" }],
        fromPerson: [{ required: true, message: "请输入提供人" }],
        infoNum: [{ required: true, type: "number", message: "请输入份数" }],
        documentType: [{ required: true, message: "请选择资料类型" }],
        attachmentId: [{ required: true, message: "请上传资料电子件" }]
      },
      importOpen: false,
      importPattern: false,
      importUrl: "/center/tinspect/infolist/tInspectInfoList/importData",
      importDownUrl: "/template/资料清单导入模板.xlsx"
    };
  },
  created() {
    this.getList();
    this.getDictDocument();
    this.getMenuList();
  },
  methods: {
    async getList() {
      this.loading = true;
      const reponse = await consultList(this.queryParams);
      reponse.data.list &&
        reponse.data.list.map(item => {
          item["whetherProvideName"] = item.whetherProvide == 1 ? "是" : "否";
        });
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
    },
    async getDictDocument() {
      const reponse = await dictListType({ type: "document_type" });
      this.documentArry = reponse.data;
    },
    async getMenuList() {
      const reponse = await catalogList();
      const menu = this.handleTree(
        reponse.data,
        "id",
        "parentId",
        "children",
        "0"
      );
      this.menuList = menu;
    },
    handleNewly() {
      this.open = true;
      this.handleformClear("dialogForm");
    },
    handleDialogClose() {
      this.open = false;
    },
    onQuery() {
      this.getList();
      this.queryParams.pageNo = 1;
    },
    onClear() {
      this.queryParams.infoName = undefined;
      this.queryParams.documentType = undefined;
    },
    handleImport() {
      this.importOpen = true;
    },
    changeImportOpen() {
      this.importOpen = false;
    },
    dailogSubmit() {
      for (const item in this.dialogParams.infoNameList) {
        const subject = this.dialogParams.infoNameList[item];
        if (subject.infoName == "") {
          this.$message.warning(`上传资料名称不能为空`);
          return;
        }
      }
      this.$refs.dialogForm.validate(async valid => {
        if (valid) {
          this.dialogParams.inspectId = this.queryParams.inspectId;
          const reponse = await consultAddSave(this.dialogParams);
          this.getList();
          this.open = false;
        }
      });
    },
    async handleRegister(data) {
      const {
        id,
        infoListName,
        lastTime,
        accessRequire,
        infoName,
        whetherProvide
      } = data;
      this.handleformClear("dialogRegisterForm");
      this.register.open = true;
      this.registerParams.id = id;
      this.basicInfo.infoListName = infoListName;
      this.basicInfo.lastTime = lastTime;
      this.basicInfo.accessRequire = accessRequire;
      this.basicInfo.infoName = infoName;
      this.registerParams.materialId = " ";
      if (whetherProvide == 1) {
        this.getDialogInfo(id);
      }
    },
    async getDialogInfo(id) {
      const reponse = await consultSee({ id });
      const subject = reponse.data;
      this.registerParams.businessType = subject.businessType;
      this.registerParams.number = subject.number;
      this.registerParams.fileNumber = subject.fileNumber;
      this.registerParams.fromUnit = subject.fromUnit;
      this.registerParams.fromPerson = subject.fromPerson;
      this.registerParams.infoNum = Number(subject.infoNum);
      this.registerParams.documentType = subject.documentType;
      this.registerParams.attachmentId = subject.attachmentId.split(",");
      this.registerParams.materialId = subject.materialId;
      this.$nextTick(() => {
        this.$refs.uploadFile.getFileMessageInfo();
      });
    },
    dailogRegisterSubmit() {
      const fileLenth = this.registerParams.attachmentId.length;
      const num = this.registerParams.infoNum;
      if (fileLenth != num) {
        this.$message.warning(`资料份数与资料上传文件数量不同`);
        return;
      }
      this.$refs.dialogRegisterForm.validate(async valid => {
        if (valid) {
          this.registerParams.attachmentId = this.registerParams.attachmentId.join(
            ","
          );
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });
          const reponse = await consultSave(this.registerParams);
          loading.close();
          this.getList();
          this.register.open = false;
          this.handleformClear("dialogRegisterForm");
          this.$refs.uploadFile.handleClear();
        }
      });
    },
    handleRegisterClose() {
      this.$refs.uploadFile.handleClear();
      this.register.open = false;
    },
    handleDelete(data) {
      this.$confirm("是否要删除", "确认信息", {
        distinguishCancelAndClose: true,
        confirmButtonText: "删除",
        cancelButtonText: "取消"
      }).then(async () => {
        const { id } = data;
        const reponse = await consultDelete({ id });
        this.getList();
      });
    },
    handleformClear(formName) {
      this.resetFieldsTap(formName);
      this.dialogParams.id = undefined;
    },

    handleChildClick() {
      this.dialogParams.infoNameList.push({
        infoName: ""
      });
    },
    handleDeleteClick(index) {
      if (this.dialogParams.infoNameList.length > 1) {
        this.dialogParams.infoNameList.splice(index, 1);
      }
    },
    setUrlPath(file) {
      this.registerParams[file.fromKey].push(file.fileId);
    },
    deleteServeFile(file) {
      const fromKeyVal = this.registerParams[file.fromKey];
      const fileId = file.fileId;
      const fromKey = file.fromKey;
      const index = fromKeyVal.indexOf(fileId);
      this.registerParams[file.fromKey].splice(index, 1);
    }
  }
};
</script>
<style lang="scss" scoped>
@import "~@/assets/styles/mixin.scss";
.report-box {
  display: flex;
  margin-top: 20px;
  &:first-child {
    margin-top: 0px;
  }
}
.infoName {
  @include textOmit;
}
</style>