<template>
  <div class="information-inner information-change">
    <h1 class="information-title active">整改方案</h1>
    <div class="tab-list-content">
      <div class="box-body" v-show="showSearch">
        <el-form :model="queryParams" label-width="120px">
          <el-row>
            <el-col :span="8">
              <el-form-item label="督察级别 ：">
                <el-select
                  placeholder="请选择督察级别"
                  @change="changeSuperviseLevel(1)"
                  v-model="queryParams.levelType"
                >
                  <el-option
                    v-for="item in superviseLevelArry"
                    :key="item.id"
                    :label="item.name"
                    :value="item.value"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="督察类型 ：">
                <el-select
                  v-model="queryParams.superviseType"
                  placeholder="请选择督察类型"
                  @change="changeSuperviseType(1)"
                >
                  <el-option
                    v-for="item in superviseTypeArry"
                    :key="item.id"
                    :label="item.name"
                    :value="item.value"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="督察轮次：">
                <el-select
                  v-model="queryParams.roundId"
                  placeholder="请选择督察轮次"
                  @change="changeSuperviseRound(1)"
                >
                  <el-option
                    v-for="item in superviseRoundArry"
                    :key="item.id"
                    :label="item.batchName"
                    :value="item.batchId"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="8">
              <el-form-item label="督察批次：">
                <el-select
                  v-model="queryParams.batchId"
                  placeholder="请选择督察批次"
                >
                  <el-option
                    v-for="item in superviseBatchArry"
                    :key="item.id"
                    :label="item.batchName"
                    :value="item.batchId"
                  >
                  </el-option>
                </el-select>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="方案名称：">
                <el-input
                  v-model.trim="queryParams.planName"
                  placeholder="请输入方案名称："
                ></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item class="pull-right">
                <el-button type="primary" @click="onQuery">查询</el-button>
                <el-button type="primary" @click="onClear">清空</el-button>
              </el-form-item>
            </el-col>
          </el-row>
        </el-form>
      </div>
      <el-row :gutter="10" class="mb8">
        <el-button size="small" @click="handleNewly" type="primary" v-if="buttonAuthority"
          >新增</el-button
        >
        <right-toolbar
          :showSearch.sync="showSearch"
          @queryTable="getChangeProgramList"
        ></right-toolbar>
      </el-row>
      <el-table v-loading="loading" :data="List" border :stripe="true">
        <el-table-column width="50" label="序号">
          <template scope="scope">
            <span>{{
              (queryParams.pageNo - 1) * queryParams.pageSize + scope.$index + 1
            }}</span>
          </template></el-table-column
        >
        <el-table-column prop="title" label="督察类型" min-width="200px">
          <template v-slot="scope">
            <span>{{ scope.row.superviseTypeName }}</span>
          </template>
        </el-table-column>
        <el-table-column prop="title" label="督察轮次、批次" min-width="200px">
          <template v-slot="scope">
            <span>{{ scope.row.roundName }}、{{ scope.row.batchName }}</span>
          </template>
        </el-table-column>
        <el-table-column prop="title" label="督察地区" min-width="200px">
          <template v-slot="scope">
            <span>{{ scope.row.cityName }}</span>
          </template>
        </el-table-column>
        <el-table-column prop="title" label="方案名称" min-width="200px">
          <template v-slot="scope">
            <span>{{ scope.row.planName }}</span>
          </template>
        </el-table-column>
        <el-table-column prop="title" label="方案电子件" min-width="200px">
          <template v-slot="scope">
            <span
              class="accounChunk"
              @click="downloadFile(scope.row.planFile)"
              >{{ scope.row.planFileName }}</span
            >
          </template>
        </el-table-column>
        <el-table-column prop="reportDate" label="方案上传时间" width="160px"
          ><template v-slot="scope">
            <span>{{ scope.row.planTime.split(' ')[0] }}</span>
          </template>
        </el-table-column>
        <el-table-column label="操作" width="250" v-if="buttonAuthority">
          <template v-slot="scope">
            <el-button size="mini" @click="handleSee(scope.row)"
              >查看</el-button
            >
            <el-button size="mini" type="primary" @click="handleEdit(scope.row)"
              >修改</el-button
            >
            <el-button
              size="mini"
              type="danger"
              @click="handleDelete(scope.row.id)"
              >删除</el-button
            >
          </template>
        </el-table-column>
        <el-table-column label="操作" width="100" v-else>
          <template v-slot="scope">
            <el-button size="mini" @click="handleSee(scope.row)"
              >查看</el-button
            >
          </template>
        </el-table-column>
      </el-table>
      <pagination
        v-show="total > 0"
        :total="total"
        :pageNo.sync="queryParams.pageNo"
        :limit.sync="queryParams.pageSize"
        @pagination="getChangeProgramList"
      />
    </div>
    <el-dialog
      :title="dialogTitle"
      :visible="true"
      v-if="open"
      width="80%"
      :before-close="handleDialogClose"
      append-to-body
    >
      <el-form
        ref="dialogForm"
        :model="dialogParams"
        :rules="dialogRules"
        label-width="80px"
        class="dialogForm twoLayoutForm"
      >
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="督察级别：" prop="levelType">
              <el-select
                placeholder="请选择督察级别"
                @change="changeSuperviseLevel(2)"
                v-model="dialogParams.levelType"
              >
                <el-option
                  v-for="item in superviseLevelArry"
                  :key="item.id"
                  :label="item.name"
                  :value="item.value"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="督察类型：" prop="superviseType">
              <el-select
                v-model="dialogParams.superviseType"
                placeholder="请选择督察类型"
                @change="changeSuperviseType(2)"
              >
                <el-option
                  v-for="item in superviseTypeArry2"
                  :key="item.id"
                  :label="item.name"
                  :value="item.value"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="督察轮次：" prop="roundId">
              <el-select
                v-model="dialogParams.roundId"
                placeholder="请选择督察轮次"
                @change="changeSuperviseRound(2)"
              >
                <el-option
                  v-for="item in superviseRoundArry2"
                  :key="item.id"
                  :label="item.batchName"
                  :value="item.batchId"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="督察批次：" prop="batchId">
              <el-select
                v-model="dialogParams.batchId"
                placeholder="请选择督察批次"
              >
                <el-option
                  v-for="item in superviseBatchArry2"
                  :key="item.id"
                  :label="item.batchName"
                  :value="item.batchId"
                >
                </el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="督察地区：" prop="city">
              <el-input
                class="inputWidth"
                v-model.trim="dialogParams.cityName"
                disabled
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="反馈意见标题：" prop="backOpinion">
              <el-input
                class="inputWidth"
                v-model.trim="dialogParams.backOpinion"
                placeholder="请输入反馈意见标题"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="反馈时间：" prop="backTime">
              <el-date-picker
                v-model="dialogParams.backTime"
                format="yyyy-MM-d"
                value-format="yyyy-MM-dd"
                type="date"
                placeholder="选择日期"
              >
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="反馈意见电子件：" prop="feedBackFile">
              <upload
                ref="uploadFile0"
                :limit="1"
                :fileId="dialogParams.feedBackFile"
                fromKey="feedBackFile"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="方案名称：" prop="planName">
              <el-input
                class="inputWidth"
                v-model.trim="dialogParams.planName"
                placeholder="请输入方案名称"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="方案上传时间：" prop="planTime">
              <el-date-picker
                v-model="dialogParams.planTime"
                format="yyyy-MM-d"
                value-format="yyyy-MM-dd"
                type="date"
                placeholder="选择日期"
              >
              </el-date-picker>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="方案电子件：" prop="planFile">
              <upload
                ref="uploadFile1"
                :limit="1"
                :fileId="dialogParams.planFile"
                fromKey="planFile"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item
              label="整改措施电子件："
              prop="rectificationMeasuresFile"
            >
              <div style="display: flex">
                <div style="margin-right: 15px">
                  <el-button size="small">点击下载模版</el-button>
                </div>
                <upload
                  class="inline"
                  ref="uploadFile2"
                  :limit="1"
                  :fileId="dialogParams.rectificationMeasuresFile"
                  fromKey="rectificationMeasuresFile"
                  @setUrlPath="setUrlPath"
                  @deleteServeFile="deleteServeFile"
                ></upload>
              </div>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>

    <el-dialog
      title="查看"
      :visible.sync="check"
      width="80%"
      :before-close="handleDialogCheckClose"
      append-to-body
    >
      <div class="dialogCheck">
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">督察级别：</label>
            <span class="check-text">{{ dialogParams.levelTypeName }}</span>
          </el-col>
          <el-col :span="12">
            <label class="check-label">督察类型：</label>
            <span class="check-text">{{ dialogParams.superviseTypeName }}</span>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">督察轮次：</label>
            <span class="check-text">{{ dialogParams.roundName }}</span>
          </el-col>
          <el-col :span="12">
            <label class="check-label">督察批次：</label>
            <span class="check-text">{{ dialogParams.batchName }}</span>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">督察地区：</label>
            <span class="check-text">{{ dialogParams.cityName }}</span>
          </el-col>
          <el-col :span="12">
            <label class="check-label">反馈意见标题：</label>
            <span class="check-text">{{ dialogParams.backOpinion }}</span>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">反馈时间：</label>
            <span class="check-text">{{ dialogParams.backTime.split(' ')[0] }}</span>
          </el-col>
          <el-col :span="12">
            <label class="check-label">反馈意见电子件：</label>
            <span
              class="check-text accounChunk"
              @click="downloadFile(dialogParams.feedBackFile)"
              >{{ dialogParams.feedBackFileName }}</span
            >
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">方案名称：</label>
            <span class="check-text">{{ dialogParams.planName }}</span>
          </el-col>
          <el-col :span="12">
            <label class="check-label">方案上传时间：</label>
            <span class="check-text">{{ dialogParams.planTime.split(' ')[0] }}</span>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <label class="check-label">方案电子件：</label>
            <span
              class="check-text accounChunk"
              @click="downloadFile(dialogParams.planFile)"
              >{{ dialogParams.planFileName }}</span
            >
          </el-col>
          <el-col :span="12">
            <label class="check-label">整改措施电子件：</label>
            <span
              class="check-text accounChunk"
              @click="downloadFile(dialogParams.rectificationMeasuresFile)"
              >{{ dialogParams.rectificationMeasuresFileName }}</span
            >
          </el-col>
        </el-row>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import {
  getChangeProgramList,
  saveChangeProgram,
  getRoundOrBatchList,
  getSpectTypeList,
  getCityList,
  deleteChangeProgram,
} from "@/api/change/dispatch";
import { getdownLoadZip, getSingleInfo } from "@/utils/styem";
import { getFileInfo } from "@/api/file";
import { mapGetters } from "vuex";
// import { dictListType, dictName } from "@/api/styem/dict/type";
export default {
  data() {
    return {
      buttonAuthority: true,
      showSearch: true,
      queryParams: {
        levelType: undefined,
        superviseType: undefined,
        roundId: undefined,
        batchId: undefined,
        pageNo: 1,
        pageSize: 10,
        planName: undefined,
      },
      superviseLevelArry: [], //督察级别
      superviseTypeArry: [], // 督察类型字典
      superviseRoundArry: [], //轮次下拉
      superviseBatchArry: [], //批次下拉
      superviseTypeArry2: [], // 督察类型字典-弹框
      superviseRoundArry2: [], //轮次下拉 --弹框
      superviseBatchArry2: [], //批次下拉 --弹框
      cityArry: [],
      issueDate: undefined,
      List: [],
      total: 0,
      loading: true,
      dialogTitle: "整改方案",
      open: false,
      dialogParams: {
        levelType: undefined,
        levelTypeName: "",
        superviseType: undefined,
        superviseTypeName: "",
        roundName: "",
        roundId: "",
        batchId: undefined,
        batchName: "",
        cityCode: "",
        cityName: "",
        backOpinion: "",
        backTime: "",
        planName: "",
        planTime: "",
        planFile: "",
        feedBackFile: "",
        rectificationMeasuresFile: "",
        planFileName: "",
        feedBackFileName: "",
        rectificationMeasuresFileName: "",
      },
      dialogRules: {
        levelType: [
          { required: true, message: "请选择督察级别", trigger: "change" },
        ],
        superviseType: [
          { required: true, message: "请选择督察类型", trigger: "change" },
        ],
        roundId: [
          { required: true, message: "请选择督察轮次", trigger: "change" },
        ],
        batchId: [
          { required: true, message: "请选择督察批次", trigger: "change" },
        ],

        backOpinion: [{ required: true, message: "请输入反馈意见标题" }],
        backTime: [{ required: true, message: "请选择反馈时间" }],
        feedBackFile: [{ required: true, message: "请上传反馈意见电子件" }],
        planName: [{ required: true, message: "请输入方案名称" }],
        planTime: [{ required: true, message: "请选择方案上传时间" }],
        planFile: [{ required: true, message: "请上传方案电子件" }],
        rectificationMeasuresFile: [
          { required: true, message: "请上传整改措施电子件" },
        ],
      },
      check: false,
      attachementName: undefined,
      attachementPath: undefined,
    };
  },
    computed: {
    ...mapGetters(["userInfo"]),
  },
  created() {
    if (this.userInfo.weatherRectify) {
      this.buttonAuthority = true;
    } else {
      this.buttonAuthority = false;
    }
    this.getChangeProgramList();
    this.getSuperviseLevelList();
    this.getCityList();
  },
  methods: {
    async getChangeProgramList() {
      this.loading = true;
      const reponse = await getChangeProgramList(this.queryParams);
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
    },
    handleNewly() {
      this.dialogTitle = "新增整改方案";
      this.handleformClear("dialogForm");
      this.clearDialog();
      this.open = true;
    },
    handleDialogClose() {
      this.open = false;
      this.handleformClear();
      this.clearDialog();
      this.$refs.uploadFile0 && this.$refs.uploadFile0.handleClear();
      this.$refs.uploadFile1 && this.$refs.uploadFile1.handleClear();
      this.$refs.uploadFile2 && this.$refs.uploadFile2.handleClear();
    },
    onQuery() {
      this.getChangeProgramList();
      this.queryParams.pageNo = 1;
    },
    clearDialog: function () {
      for (let i in this.dialogParams) {
        if (i != "cityCode" && i != "cityName") {
          this.$set(this.dialogParams, i, "");
        }
      }
    },
    onClear() {
      this.queryParams.levelType = undefined;
      this.queryParams.superviseType = undefined;
      this.queryParams.roundId = undefined;
      this.queryParams.batchId = undefined;
      this.queryParams.planName = undefined;
    },
    dailogSubmit() {
      this.$refs.dialogForm.validate(async (valid) => {
        if (valid) {
          const reponse = await saveChangeProgram(this.dialogParams);
          this.getChangeProgramList();
          this.open = false;
          this.handleformClear();
          this.$refs.uploadFile0.handleClear();
          this.$refs.uploadFile1.handleClear();
          this.$refs.uploadFile2.handleClear();
        }
      });
    },
    handleDialogCheckClose() {
      this.check = false;
      this.handleCheckClear();
      this.clearDialog();
      this.$refs.uploadFile0 && this.$refs.uploadFile0.handleClear();
      this.$refs.uploadFile1 && this.$refs.uploadFile1.handleClear();
      this.$refs.uploadFile2 && this.$refs.uploadFile2.handleClear();
    },
    async handleSee(info) {
      this.check = true;
      this.getDialogInfo(info);
    },
    async handleEdit(info) {
      this.dialogTitle = "修改";
      this.getDialogInfo(info);
      this.changeSuperviseLevel(2, 1);
      this.changeSuperviseType(2, 1);
      this.changeSuperviseRound(2, 1);

      this.open = true;
    },
    getDialogInfo(info) {
      this.$set(this.dialogParams, "id", info.id);
      this.$set(this.dialogParams, "levelType", info.levelType);
      this.$set(this.dialogParams, "levelTypeName", info.levelTypeName);
      this.$set(this.dialogParams, "superviseType", info.superviseType);
      this.$set(this.dialogParams, "superviseTypeName", info.superviseTypeName);
      this.$set(this.dialogParams, "roundId", info.roundId);
      this.$set(this.dialogParams, "roundName", info.roundName);
      this.$set(this.dialogParams, "batchId", info.batchId);
      this.$set(this.dialogParams, "batchName", info.batchName);
      this.$set(this.dialogParams, "cityName", info.cityName);
      this.$set(this.dialogParams, "backOpinion", info.backOpinion);
      this.$set(this.dialogParams, "backTime", info.backTime);
      this.$set(this.dialogParams, "planName", info.planName);
      this.$set(this.dialogParams, "backTime", info.backTime);
      this.$set(this.dialogParams, "planTime", info.planTime);
      this.$set(this.dialogParams, "planFile", info.planFile);
      this.$set(this.dialogParams, "feedBackFile", info.feedBackFile);
      this.$set(this.dialogParams, "planFileName", info.planFileName);
      this.$set(this.dialogParams, "feedBackFileName", info.feedBackFileName);
      this.$set(
        this.dialogParams,
        "rectificationMeasuresFileName",
        info.rectificationMeasuresFileName
      );
      this.$set(
        this.dialogParams,
        "rectificationMeasuresFile",
        info.rectificationMeasuresFile
      );
      this.$nextTick(() => {
        if (this.$refs.uploadFile0) {
          this.$refs.uploadFile0.getFileMessageInfo();
        }
        if (this.$refs.uploadFile1) {
          this.$refs.uploadFile1.getFileMessageInfo();
        }
        if (this.$refs.uploadFile2) {
          this.$refs.uploadFile2.getFileMessageInfo();
        }
      });
    },
    async getSingleMessagInfo(fileId) {
      const reponse = await getFileInfo({ ids: fileId });
      if (reponse.data && reponse.data.length) {
        const subject = reponse.data;
        if (reponse.data && reponse.data.length) {
          const subject = reponse.data;
          this.attachementName = subject[0].file_name;
          this.attachementPath = subject[0].save_path;
        }
      }
    },
    handleDelete(id) {
      this.$confirm("是否要删除", "确认信息", {
        distinguishCancelAndClose: true,
        confirmButtonText: "删除",
        cancelButtonText: "取消",
      }).then(async () => {
        const reponse = await deleteChangeProgram({ id: id });
        this.getChangeProgramList();
      });
    },
    downloadFile(ids) {
      getFileInfo({ ids }).then((res) => {
        let path = res.data[0].save_path;
        getdownLoadZip(path);
      });
    },
    handleformClear() {
      this.resetFieldsTap("dialogForm");
      this.dialogParams.id = undefined;
    },
    handleCheckClear() {
      this.dialogParams.id = undefined;
      this.dialogParams.title = undefined;
      this.dialogParams.fileId = undefined;
      this.dialogParams.reportDate = undefined;
    },
    issueDateChange(picker) {
      if (picker == null) {
        this.queryParams.beginReportDate = undefined;
        this.queryParams.endReportDate = undefined;
      } else {
        this.queryParams.beginReportDate = picker[0];
        this.queryParams.endReportDate = picker[1];
      }
    },
    setUrlPath(file) {
      this.dialogParams[file.fromKey] = file.fileId;
    },
    deleteServeFile(file) {
      this.dialogParams[file.fromKey] = undefined;
    },
    //   dq

    getSuperviseLevelList: function () {
      getSpectTypeList({ parentId: 0 })
        .then((res) => {
          this.superviseLevelArry = res.data;
        })
    },
    getCityList: function () {
      getCityList()
        .then((res) => {
          this.dialogParams.cityName = res.data.teamInfo.areaName;
          this.dialogParams.cityCode = res.data.teamInfo.areaCode;
        })
    },
    changeSuperviseLevel: function (type, isreshow) {
      let value, relatedArr, id;
      if (type == "2") {
        value = this.dialogParams.levelType;
        relatedArr = "superviseTypeArry2";
        //清空关联表单
        this.superviseTypeArry2 = [];
        this.superviseRoundArry2 = [];
        this.superviseBatchArry2 = [];
        if (!isreshow) {
          this.dialogParams.superviseType = undefined;
          this.dialogParams.roundId = undefined;
          this.dialogParams.batchId = undefined;
        }
      } else {
        value = this.queryParams.levelType;
        relatedArr = "superviseTypeArry";
        this.superviseTypeArry = [];
        this.superviseRoundArry = [];
        this.superviseBatchArry = [];
        this.queryParams.superviseType = undefined;
        this.queryParams.roundId = undefined;
        this.queryParams.batchId = undefined;
      }
      this.superviseLevelArry.forEach((item) => {
        if (item.value == value) {
          id = item.id;
        }
      });
      getSpectTypeList({ parentId: id })
        .then((res) => {
          this[relatedArr] = res.data;
        })
        .catch((res) => {});
    },
    changeSuperviseType: function (type, isreshow) {
      let value, relatedArr;
      if (type == "2") {
        value = this.dialogParams.superviseType;
        relatedArr = "superviseRoundArry2";
        //清空关联表单
        this.superviseRoundArry2 = [];
        this.superviseBatchArry2 = [];
        if (!isreshow) {
          this.dialogParams.roundId = undefined;
          this.dialogParams.batchId = undefined;
        }
      } else {
        value = this.queryParams.superviseType;
        relatedArr = "superviseRoundArry";
        this.superviseRoundArry = [];
        this.superviseBatchArry = [];
        this.queryParams.roundId = undefined;
        this.queryParams.batchId = undefined;
      }
      getRoundOrBatchList({ superviseType: value })
        .then((res) => {
          res.data.forEach((item) => {
            item.batchId = item.batchId.toString();
          });
          this[relatedArr] = res.data;
        })
    },
    changeSuperviseRound: function (type, isreshow) {
      let value, relatedArr;
      if (type == "2") {
        value = this.dialogParams.roundId;
        relatedArr = "superviseBatchArry2";
        //清空关联表单
        this.superviseBatchArry2 = [];
        if (!isreshow) {
          this.dialogParams.batchId = undefined;
        }
      } else {
        value = this.queryParams.roundId;
        relatedArr = "superviseBatchArry";
        this.superviseBatchArry = [];
        this.queryParams.batchId = undefined;
      }
      getRoundOrBatchList({ id: value })
        .then((res) => {
          res.data.forEach((item) => {
            item.batchId = item.batchId.toString();
          });
          this[relatedArr] = res.data;
        })
    },
  },
};
</script>
<style lang="scss" scoped>
.twoLayoutForm .el-form-item /deep/ .el-form-item__label {
  width: 150px !important;
}
.inline {
  display: inline-block !important;
}
</style>


