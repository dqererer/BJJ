<template>
  <div>
    <el-dialog
      title="个别谈话预览"
      :visible.sync="previewIndexOpen"
      :before-close="handleDialogPreviewClose"
      width="80%"
      append-to-body
    >
      <div ref="print">
        <div class="print-box print-box-top">
          <div class="turn-dialog-top">
            <h1 class="turn-dialog-title">
              {{ userInfo.provinceName }}环境保护督察组个别谈话记录
            </h1>
          </div>
          <div class="turn-dialog-box">
            <span class="turn-dialog-name">{{ inspectName }}</span>
            <span class="turn-dialog-number">{{ previewData.showNum }} </span>
          </div>
          <div class="turn-dialog-content">
            <p class="turn-dialog-item">
              时间：<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.year
              }}</span
              >年<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.month
              }}</span
              >月<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.day
              }}</span
              >日<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.hour
              }}</span
              >时<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.min
              }}</span
              >分至<span class="dialog-item-fill dialog-item-filla">{{
                previewData.startTime.year
              }}</span
              >年<span class="dialog-item-fill dialog-item-filla">{{
                previewData.endTime.month
              }}</span
              >月<span class="dialog-item-fill dialog-item-filla">{{
                previewData.endTime.day
              }}</span
              >日<span class="dialog-item-fill dialog-item-filla">{{
                previewData.endTime.hour
              }}</span
              >时<span class="dialog-item-fill dialog-item-filla">{{
                previewData.endTime.min
              }}</span
              >分
            </p>
            <p class="turn-dialog-item">
              地点：<span class="dialog-item-fill dialog-item-address"
                >{{ previewData.city }}{{ previewData.county
                }}{{ previewData.actualAddress }}</span
              >
            </p>
            <p class="turn-dialog-item">
              谈话人：<span class="dialog-item-fill dialog-item-jilu">{{
                previewData.actualSpeakerNmae
              }}</span
              >记录人：<span class="dialog-item-fill dialog-item-jilur">{{
                previewData.actualRecordName
              }}</span>
            </p>
            <p class="turn-dialog-item">
              被谈话人：<span class="dialog-item-fill dialog-item-tall">{{
                previewData.actualInterviewee
              }}</span
              >单位：<span class="dialog-item-fill dialog-item-unit">{{
                previewData.actualIntervieweeUnit
              }}</span>
            </p>
            <p class="turn-dialog-item">
              职务：<span class="dialog-item-fill dialog-item-work">{{
                previewData.actualIntervieweePost
              }}</span>
            </p>
          </div>
        </div>
        <div class="print-box">
          <div
            class="turn-dialog-content print-item"
            v-for="item in previewData.recordList"
            :key="item.id"
          >
            <p class="turn-dialog-item">问题：{{ item.question }}</p>
            <p class="turn-dialog-item">答案：{{ item.answer }}</p>
          </div>
        </div>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { mapGetters } from "vuex";
import { severalSee } from "@/api/burg/garrison";
export default {
  props: {
    inspectName: {
      type: String
    },
    previewIndexOpenId: {
      type: String
    },
    previewIndexOpen: {
      type: Boolean
    }
  },
  data() {
    return {
      previewData: {
        actualSpeakerNmae: undefined,
        actualRecordName: undefined,
        actualInterviewee: undefined,
        actualIntervieweeUnit: undefined,
        actualIntervieweePost: undefined,
        city: undefined,
        county: undefined,
        actualAddress: undefined,
        recordList: undefined,
        showNum: undefined,
        startTime: {
          year: undefined,
          month: undefined,
          day: undefined,
          hour: undefined,
          min: undefined
        },
        endTime: {
          year: undefined,
          month: undefined,
          day: undefined,
          hour: undefined,
          min: undefined
        }
      }
    };
  },
  computed: {
    ...mapGetters(["userInfo"])
  },
  methods: {
    handleDialogPreviewClose() {
      this.$emit("handleInspectIndexPreviewClose");
    },
    async handleEdit() {
      const id = this.previewIndexOpenId;
      const reponse = await severalSee({ id });
      const subject = reponse.data;
      this.getReacodEditInfo(subject);
    },
    getReacodEditInfo(data) {
      this.previewData.actualSpeakerNmae = data.actualSpeaker;
      this.previewData.actualRecordName = data.actualRecord;
      this.previewData.actualInterviewee = data.actualInterviewee;
      this.previewData.actualIntervieweeUnit = data.actualIntervieweeUnit;
      this.previewData.actualIntervieweePost = data.actualIntervieweePost;
      this.previewData.city = data.actualCityName;
      this.previewData.county = data.actualCountyName;
      this.previewData.actualAddress = data.actualAddress;
      this.previewData.recordList = data.recordList;
      this.previewData.showNum = data.showNum;
      this.previewData.startTime = this.getTimeValue(data.startTime);
      this.previewData.endTime = this.getTimeValue(data.endTime);
    },
    getTimeValue(time) {
      const timeArry = time.split(" ");
      const yearArry = timeArry[0].split("-");
      const secondArry = timeArry[1].split(":");
      return {
        year: yearArry[0],
        month: yearArry[1],
        day: yearArry[2],
        hour: secondArry[0],
        min: secondArry[1]
      };
    }
  }
};
</script>

<style lang="scss" scoped>
.dialog-item-filla {
  width: 72px !important;
  text-align: center !important;
}

.print-item {
  border-bottom: 1px dotted #ddd;
}
.dialog-item-jilu {
  width: 478px !important;
  text-align: left !important;
}
.dialog-item-jilur {
  width: 340px !important;
  text-align: left !important;
}
.dialog-item-tall {
  width: 458px !important;
  text-align: left !important;
}
.dialog-item-unit {
  width: 360px !important;
  text-align: left !important;
}
.dialog-item-work {
  width: 459px !important;
  text-align: left !important;
}
.dialog-item-address {
  width: 910px !important;
  text-align: left !important;
}
</style>