<template>
  <div class="information-inner information-change">
    <h1 class="information-title active">线索管理</h1>
    <div class="tab-list-content">
      <national-info :teamId.sync="queryParams.inspectTeamId" @nameChange="getList"></national-info>
      <div class="box-body" v-show="showSearch">
        <el-form :model="queryParams" label-width="120px">
          <el-row>
            <el-col :span="8">
              <el-form-item label="督察组名称：">
                <el-input v-model="queryParams.inspectTeamName" placeholder="请输入督察组名称"></el-input>
              </el-form-item>
            </el-col>
            <el-col :span="8">
              <el-form-item label="线索名称：">
                <el-input v-model="queryParams.clueName" placeholder="请输入线索名称"></el-input>
              </el-form-item>
            </el-col>
            <el-form-item class="pull-right">
              <el-button type="primary" @click="onQuery">查询</el-button>
              <el-button type="primary" @click="onClear">清空</el-button>
            </el-form-item>
          </el-row>
        </el-form>
      </div>
      <el-row :gutter="10" class="mb8">
        <div class="button-authority-style" v-if="buttonAuthority">
          <el-button size="small" @click="handleNewly" type="primary">新增</el-button>
        </div>
        <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
      </el-row>
      <el-table v-loading="loading" :data="List" border :stripe="true">
        <el-table-column width="50" label="序号">
          <template scope="scope">
            <span>
              {{
              (queryParams.pageNo - 1) * queryParams.pageSize + scope.$index + 1
              }}
            </span>
          </template>
        </el-table-column>
        <el-table-column label="线索名称" min-width="200px" :show-overflow-tooltip="true">
          <template v-slot="scope">
            <span class="accounChunk" @click="handleSee(scope.row)">
              {{
              scope.row.clueName
              }}
            </span>
          </template>
        </el-table-column>
        <el-table-column prop="clueNum" label="线索编号" width="160px"></el-table-column>
        <el-table-column prop="inspectTeamName" label="督察组名称" width="200px"></el-table-column>
        <el-table-column prop="inspectTeamAreaName" label="督察地区" width="120px"></el-table-column>
        <el-table-column label="线索所在地" :show-overflow-tooltip="true" width="240px">
          <template
            slot-scope="scope"
          >{{ scope.row.city }}{{ scope.row.town }}{{ scope.row.address }}</template>
        </el-table-column>
        <el-table-column prop="pollutionTypeName" label="污染类型" width="100px"></el-table-column>
        <el-table-column prop="clueSourceName" label="线索来源" width="140px"></el-table-column>
        <!-- <el-table-column label="操作" width="100" fixed="right">
          <template slot-scope="scope" v-if="buttonAuthority">
            <el-button size="mini" type="danger" @click="handleDelete(scope.row)">删除</el-button>
          </template>
        </el-table-column> -->
      </el-table>
      <pagination
        v-show="total > 0"
        :total="total"
        :pageNo.sync="queryParams.pageNo"
        :limit.sync="queryParams.pageSize"
        @pagination="getList"
      />
    </div>
    <el-dialog
      title="新增线索"
      :visible.sync="open"
      :before-close="handleDialogClewClose"
      width="80%"
      append-to-body
      :close-on-click-modal="false"
    >
      <examineInfo />
      <div class="examineInfo">
        <h1 class="examineInfo-title">线索信息</h1>
      </div>
      <el-form
        ref="dialogClewForm"
        :model="dialogClewParams"
        :rules="dialogClewRules"
        label-width="80px"
        class="dialogForm twoLayoutForm mt22"
      >
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索名称：" prop="clueName">
              <el-select
                class="question-list"
                v-model="dialogClewParams.clueName"
                filterable
                allow-create
                default-first-option
                placeholder="请选择线索名称"
                @change="handleClewClueNameChange"
              >
                <el-option
                  v-for="(item,index) in clewAddList"
                  :key="index"
                  :label="item.clueName"
                  :value="item.id"
                ></el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索编号：" prop="clueNum">
              <el-input
                maxlength="60"
                show-word-limit
                class="input-limit"
                v-model="dialogClewParams.clueNum"
                placeholder="请输入线索编号"
                :disabled="clewReadonlyBoolean"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="线索来源：" prop="clueSource">
              <el-select
                :disabled="clewReadonlyBoolean"
                v-model="dialogClewParams.clueSource"
                placeholder="请选择线索来源"
              >
                <el-option
                  v-for="item in sourceArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.value"
                ></el-option>
              </el-select>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="污染类型：" prop="pollutionType">
              <el-select
                :disabled="clewReadonlyBoolean"
                v-model="dialogClewParams.pollutionType"
                placeholder="请选择污染类型"
              >
                <el-option
                  v-for="item in pollutantArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.value"
                ></el-option>
              </el-select>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="问题属性：" prop="problemType">
              <el-input
                v-model="dialogClewParams.problemType"
                maxlength="8"
                show-word-limit
                placeholder="请输入问题属性"
                :disabled="clewReadonlyBoolean"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索所在地：" class="meet-addressb" prop="address">
              <el-select
                v-model="dialogClewParams.cityCode"
                placeholder="请选择市"
                @change="handleCityChange"
                :disabled="clewReadonlyBoolean"
              >
                <el-option
                  v-for="item in areaArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                ></el-option>
              </el-select>
              <el-select
                v-model="dialogClewParams.countyCode"
                placeholder="请选择区县"
                @change="handleCountyChange"
                :disabled="clewReadonlyBoolean"
              >
                <el-option
                  v-for="item in countyArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                ></el-option>
              </el-select>
              <el-select
                v-model="dialogClewParams.townCode"
                placeholder="请选择镇"
                :disabled="clewReadonlyBoolean"
              >
                <el-option
                  v-for="item in townArry"
                  :key="item.id"
                  :label="item.label"
                  :value="item.id"
                ></el-option>
              </el-select>
              <el-input
                v-model="dialogClewParams.address"
                maxlength="120"
                show-word-limit
                class="input-limit"
                placeholder="请输入详细地址"
                :disabled="clewReadonlyBoolean"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="经度：" prop="longitude">
              <el-input
                :disabled="clewReadonlyBoolean"
                placeholder="请输入经度"
                v-model="dialogClewParams.longitude"
              ></el-input>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="纬度：" prop="latitude">
              <el-input
                :disabled="clewReadonlyBoolean"
                placeholder="请输入纬度"
                v-model="dialogClewParams.latitude"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="24">
            <el-form-item label="线索内容：" prop="clueContent">
              <el-input
                :disabled="clewReadonlyBoolean"
                type="textarea"
                placeholder="请输入线索内容"
                maxlength="240"
                show-word-limit
                rows="4"
                class="textarea-limt-padding"
                v-model="dialogClewParams.clueContent"
              ></el-input>
            </el-form-item>
          </el-col>
        </el-row>
        <el-row :gutter="24">
          <el-col :span="12">
            <el-form-item label="线索相关资料：" prop="attachmentId">
              <upload
                :uneditable="clewReadonlyBoolean"
                ref="uploadFile"
                :limit="1"
                :fileId="dialogClewParams.attachmentId"
                fromKey="attachmentId"
                params="dialogClewParams"
                @setUrlPath="setUrlPath"
                @deleteServeFile="deleteServeFile"
              ></upload>
            </el-form-item>
          </el-col>
          <el-col :span="12">
            <el-form-item label="重点关注：" prop="weatherFocus">
              <el-radio-group v-model="dialogClewParams.weatherFocus" placeholder="请选择重点关注">
                <el-radio label="1">是</el-radio>
                <el-radio label="0">否</el-radio>
              </el-radio-group>
            </el-form-item>
          </el-col>
        </el-row>
        <div class="dialogFormFooter">
          <el-button type="primary" @click="dailogClewSubmit">保存</el-button>
          <el-button type="primary" @click="handleDialogClewClose">关闭</el-button>
        </div>
      </el-form>
    </el-dialog>
    <clew-info
      ref="clewRef"
      :clewId="clewId"
      :lookOpen="lookOpen"
      @handleLookClose="handleLookClose"
    />
  </div>
</template>

<script>
import {
  threadRelationDelete,
  threadSee,
  threadRelationPull,
  threadRelationSave
} from "@/api/burg/prepare";
import { clewAll, clewList, severalRelationSave } from "@/api/burg/garrison";
import { dictListType } from "@/api/styem/dict/type";
import examineInfo from "@/components/examineInfo";
import nationalInfo from "@/components/nationalInfo";
import { mapGetters } from "vuex";
import { areaTreeNew } from "@/api/styem/dept";
import { getFileInfo } from "@/api/file";
import clewInfo from "@/views/InspectorClues/components/clewInfo";
export default {
  components: {
    examineInfo,
    nationalInfo,
    clewInfo
  },
  data() {
    return {
      showSearch: true,
      queryParams: {
        pageNo: 1,
        pageSize: 10,
        inspectTeamName: undefined,
        clueName: undefined,
        inspectType: undefined,
        inspectTurnId: undefined,
        inspectBatchId: undefined,
        inspectTeamId: undefined
      },
      List: [],
      nameList: [],
      nameParams: {
        pageNo: 1,
        pageSize: 20,
        clueName: undefined,
        inspectTeamId: undefined
      },
      total: 0,
      loading: true,
      open: false,
      dialogClewParams: {
        clueName: undefined,
        clueNum: undefined,
        clueSource: undefined,
        pollutionType: undefined,
        problemType: undefined,
        cityCode: undefined,
        countyCode: undefined,
        townCode: undefined,
        address: undefined,
        clueContent: undefined,
        attachmentId: undefined,
        longitude: undefined,
        latitude: undefined,
        inspectTeamId: undefined,
        relationId: undefined,
        weatherFocus: undefined,
        relationName: "TInspectTeam"
      },
      dialogClewRules: {
        clueName: [{ required: true, message: "请输入线索名称" }],
        clueNum: [{ required: true, message: "请输入线索编号" }],
        clueSource: [{ required: true, message: "请输入线索来源" }],
        pollutionType: [{ required: true, message: "请选择污染类型" }],
        problemType: [{ required: true, message: "请输入问题属性" }],
        address: [{ required: true, message: "请输入详细地址" }],
        longitude: [
          { required: true, message: "请输入经度" },
          {
            validator: function(rule, value, callback) {
              if (isNaN(value)) {
                callback(new Error("请输入数字"));
              } else if (value < 0 || value > 180) {
                callback(new Error("请输入有效经度"));
              } else {
                callback();
              }
            }
          }
        ],
        latitude: [
          { required: true, message: "请输入纬度" },
          {
            validator: function(rule, value, callback) {
              if (isNaN(value)) {
                callback(new Error("请输入数字"));
              } else if (value < 0 || value > 90) {
                callback(new Error("请输入有效纬度"));
              } else {
                callback();
              }
            }
          }
        ],
        clueContent: [{ required: true, message: "请输入线索内容" }],
        attachmentId: [{ required: true, message: "请上传线索相关资料" }],
        weatherFocus: [{ required: true, message: "请选择重点关注" }]
      },
      lookOpen: false,
      clewId: undefined,
      buttonAuthority: true,
      clewAddList: [],
      clewReadonlyBoolean: false,
      sourceArry: [],
      pollutantArry: [],
      countyArry: [],
      townArry: []
    };
  },
  created() {
    if (this.inspectInfo.suite) {
      this.buttonAuthority = true;
    } else {
      this.buttonAuthority = false;
      const superviseSubject = JSON.parse(
        sessionStorage.getItem("superviseItem")
      );
      this.queryParams.inspectType = superviseSubject.code;
      this.queryParams.inspectTurnId = superviseSubject.roundId;
      this.queryParams.inspectBatchId = superviseSubject.batchId;
    }
    this.getDictPollutant();
    this.getDictSource();
  },
  activated () {
    this.getList();
  },
  computed: {
    ...mapGetters(["areaArry", "inspectInfo", "userInfo"])
  },
  methods: {
    async getList() {
      this.loading = true;
      const reponse = await clewList(this.queryParams);
      this.List = reponse.data.list;
      this.total = reponse.data.count;
      this.loading = false;
    },
    async handleCityChange(code) {
      this.countyArry = [];
      this.dialogClewParams.countyCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    async handleCityChangeb(code) {
      this.countyArry = [];
      const reponse = await areaTreeNew({ parentId: code });
      this.countyArry = reponse.data;
    },
    async handleCountyChange(code) {
      this.townArry = [];
      this.dialogClewParams.townCode = undefined;
      const reponse = await areaTreeNew({ parentId: code });
      this.townArry = reponse.data;
    },
    async handleCountyChangeb(code) {
      this.townArry = [];
      const reponse = await areaTreeNew({ parentId: code });
      this.townArry = reponse.data;
    },
    onQuery() {
      this.getList();
      this.queryParams.pageNo = 1;
    },
    onClear() {
      this.queryParams.inspectTeamName = undefined;
      this.queryParams.clueName = undefined;
    },
    async getDictSource() {
      const reponse = await dictListType({ type: "clue_source" });
      this.sourceArry = reponse.data;
    },
    async getDictPollutant() {
      const reponse = await dictListType({ type: "clue_pollution_type" });
      this.pollutantArry = reponse.data;
    },
    handleNewly() {
      this.open = true;
      this.clewReadonlyBoolean = false;
      this.handleformClear("dialogClewForm");
      this.getNameAllList();
    },
    async getNameAllList() {
      this.nameParams.inspectTeamId = this.queryParams.inspectTeamId;
      const reponse = await threadRelationPull(this.nameParams);
      this.clewAddList = reponse.data.list;
    },
    handleDialogClose() {
      this.open = false;
    },
    async handleClewClueNameChange(id) {
      const reponse = await threadSee({ id });
      if (reponse.data) {
        const subject = reponse.data;
        this.clewReadonlyBoolean = true;
        this.dialogClewParams.id = subject.id;
        this.dialogClewParams.clueName = subject.clueName;
        this.dialogClewParams.clueNum = subject.clueNum;
        this.dialogClewParams.clueSource = subject.clueSource;
        this.dialogClewParams.pollutionType = subject.pollutionType;
        this.dialogClewParams.problemType = subject.problemType;
        this.dialogClewParams.cityCode = subject.cityCode;
        this.dialogClewParams.countyCode = subject.countyCode;
        this.dialogClewParams.townCode = subject.townCode;
        this.dialogClewParams.address = subject.address;
        this.dialogClewParams.clueContent = subject.clueContent;
        this.dialogClewParams.latitude = subject.latitude;
        this.dialogClewParams.longitude = subject.longitude;
        this.dialogClewParams.attachmentName = subject.attachmentName;
        this.dialogClewParams.attachmentId = subject.attachmentId;
        this.dialogClewParams.weatherFocus = subject.weatherFocus;
        this.handleCityChangeb(subject.cityCode);
        this.handleCountyChangeb(subject.countyCode);
        this.$nextTick(() => {
          this.$refs.uploadFile.getFileMessageInfo();
        });
      } else {
        this.$nextTick(() => {
          this.dialogClewParams.id = undefined;
          this.dialogClewParams.cityCode = undefined;
          this.dialogClewParams.countyCode = undefined;
          this.dialogClewParams.townCode = undefined;
          this.resetFieldsTap("dialogClewForm");
          this.dialogClewParams.clueName = id;
          this.clewReadonlyBoolean = false;
          this.$refs.uploadFile.handleClear &&
            this.$refs.uploadFile.handleClear();
        });
      }
    },
    handleDialogClewClose() {
      this.open = false;
      this.clewReadonlyBoolean = false;
      this.dialogClewParams.relationId = undefined;
      this.dialogClewParams.inspectTeamId = undefined;
      this.dialogClewParams.cityCode = undefined;
      this.dialogClewParams.countyCode = undefined;
      this.dialogClewParams.townCode = undefined;
      this.dialogClewParams.attachmentName = undefined;
      this.dialogClewParams.attachmentId = undefined;
      this.$refs.uploadFile.handleClear && this.$refs.uploadFile.handleClear();
    },
    async handleSee(data) {
      const { id } = data;
      this.clewId = id;
      this.lookOpen = true;
      this.$nextTick(() => {
        this.$refs.clewRef.handleEdit();
      });
    },
    handleLookClose() {
      this.lookOpen = false;
    },
    dailogClewSubmit() {
      this.$refs.dialogClewForm.validate(async valid => {
        if (valid) {
          const loading = this.$loading({
            lock: true,
            text: "正在保存提交，请稍等...",
            spinner: "el-icon-loading",
            background: "rgba(0, 0, 0, 0.1)"
          });
          if (this.clewReadonlyBoolean == true) {
            const reponse = await threadRelationSave({
              id: this.dialogClewParams.id,
              inspectTeamId: this.queryParams.inspectTeamId,
              relationId: this.queryParams.inspectTeamId,
              relationName: "TInspectTeam"
            });
          } else {
            this.dialogClewParams.relationId = this.queryParams.inspectTeamId;
            this.dialogClewParams.inspectTeamId = this.queryParams.inspectTeamId;
            const reponse = await severalRelationSave(this.dialogClewParams);
          }
          this.handleDialogClewClose();
          this.open = false;
          loading.close();
          this.$message({
            message: "保存成功",
            type: "success"
          });
          this.getList();
        }
      });
    },
    handleDelete(data) {
      this.$confirm("是否要删除", "确认信息", {
        distinguishCancelAndClose: true,
        confirmButtonText: "删除",
        cancelButtonText: "取消"
      }).then(async () => {
        const { id, inspectTeamId } = data;
        const reponse = await threadRelationDelete({
          id,
          inspectTeamId,
          relationId: id
        });
        this.$message({
          message: "删除成功",
          type: "success"
        });
        this.getList();
      });
    },
    handleformClear(formName) {
      this.resetFieldsTap(formName);
    },
    setUrlPath(file) {
      this[file.params][file.fromKey] = file.fileId;
    },
    deleteServeFile(file) {
      this[file.params][file.fromKey] = undefined;
    }
  }
};
</script>
<style lang="scss" scoped>
.twoLayoutForm {
  .meet-addressb {
    .el-form-item__content {
      .el-select {
        width: 19%;
      }
      .el-input {
        width: 43%;
      }
    }
  }
}
</style>